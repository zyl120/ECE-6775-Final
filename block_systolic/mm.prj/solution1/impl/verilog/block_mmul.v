// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="block_mmul,hls_ip_2019_2_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.702000,HLS_SYN_LAT=10690,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=100,HLS_SYN_FF=3902,HLS_SYN_LUT=3375,HLS_VERSION=2019_2_1}" *)

module block_mmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ARows_V_a_0_dout,
        ARows_V_a_0_empty_n,
        ARows_V_a_0_read,
        ARows_V_a_1_dout,
        ARows_V_a_1_empty_n,
        ARows_V_a_1_read,
        ARows_V_a_2_dout,
        ARows_V_a_2_empty_n,
        ARows_V_a_2_read,
        ARows_V_a_3_dout,
        ARows_V_a_3_empty_n,
        ARows_V_a_3_read,
        ARows_V_a_4_dout,
        ARows_V_a_4_empty_n,
        ARows_V_a_4_read,
        ARows_V_a_5_dout,
        ARows_V_a_5_empty_n,
        ARows_V_a_5_read,
        ARows_V_a_6_dout,
        ARows_V_a_6_empty_n,
        ARows_V_a_6_read,
        ARows_V_a_7_dout,
        ARows_V_a_7_empty_n,
        ARows_V_a_7_read,
        ARows_V_a_8_dout,
        ARows_V_a_8_empty_n,
        ARows_V_a_8_read,
        ARows_V_a_9_dout,
        ARows_V_a_9_empty_n,
        ARows_V_a_9_read,
        BCols_V_a_0_dout,
        BCols_V_a_0_empty_n,
        BCols_V_a_0_read,
        BCols_V_a_1_dout,
        BCols_V_a_1_empty_n,
        BCols_V_a_1_read,
        BCols_V_a_2_dout,
        BCols_V_a_2_empty_n,
        BCols_V_a_2_read,
        BCols_V_a_3_dout,
        BCols_V_a_3_empty_n,
        BCols_V_a_3_read,
        BCols_V_a_4_dout,
        BCols_V_a_4_empty_n,
        BCols_V_a_4_read,
        BCols_V_a_5_dout,
        BCols_V_a_5_empty_n,
        BCols_V_a_5_read,
        BCols_V_a_6_dout,
        BCols_V_a_6_empty_n,
        BCols_V_a_6_read,
        BCols_V_a_7_dout,
        BCols_V_a_7_empty_n,
        BCols_V_a_7_read,
        BCols_V_a_8_dout,
        BCols_V_a_8_empty_n,
        BCols_V_a_8_read,
        BCols_V_a_9_dout,
        BCols_V_a_9_empty_n,
        BCols_V_a_9_read,
        abPartialSum_out_address0,
        abPartialSum_out_ce0,
        abPartialSum_out_we0,
        abPartialSum_out_d0,
        abPartialSum_out_address1,
        abPartialSum_out_ce1,
        abPartialSum_out_we1,
        abPartialSum_out_d1,
        iteration
);

parameter    ap_ST_fsm_state1 = 46'd1;
parameter    ap_ST_fsm_state2 = 46'd2;
parameter    ap_ST_fsm_state3 = 46'd4;
parameter    ap_ST_fsm_state4 = 46'd8;
parameter    ap_ST_fsm_state5 = 46'd16;
parameter    ap_ST_fsm_state6 = 46'd32;
parameter    ap_ST_fsm_state7 = 46'd64;
parameter    ap_ST_fsm_state8 = 46'd128;
parameter    ap_ST_fsm_state9 = 46'd256;
parameter    ap_ST_fsm_state10 = 46'd512;
parameter    ap_ST_fsm_state11 = 46'd1024;
parameter    ap_ST_fsm_state12 = 46'd2048;
parameter    ap_ST_fsm_state13 = 46'd4096;
parameter    ap_ST_fsm_state14 = 46'd8192;
parameter    ap_ST_fsm_state15 = 46'd16384;
parameter    ap_ST_fsm_state16 = 46'd32768;
parameter    ap_ST_fsm_state17 = 46'd65536;
parameter    ap_ST_fsm_state18 = 46'd131072;
parameter    ap_ST_fsm_state19 = 46'd262144;
parameter    ap_ST_fsm_state20 = 46'd524288;
parameter    ap_ST_fsm_pp0_stage0 = 46'd1048576;
parameter    ap_ST_fsm_state23 = 46'd2097152;
parameter    ap_ST_fsm_state24 = 46'd4194304;
parameter    ap_ST_fsm_state25 = 46'd8388608;
parameter    ap_ST_fsm_state26 = 46'd16777216;
parameter    ap_ST_fsm_state27 = 46'd33554432;
parameter    ap_ST_fsm_state28 = 46'd67108864;
parameter    ap_ST_fsm_state29 = 46'd134217728;
parameter    ap_ST_fsm_state30 = 46'd268435456;
parameter    ap_ST_fsm_state31 = 46'd536870912;
parameter    ap_ST_fsm_state32 = 46'd1073741824;
parameter    ap_ST_fsm_state33 = 46'd2147483648;
parameter    ap_ST_fsm_state34 = 46'd4294967296;
parameter    ap_ST_fsm_state35 = 46'd8589934592;
parameter    ap_ST_fsm_state36 = 46'd17179869184;
parameter    ap_ST_fsm_state37 = 46'd34359738368;
parameter    ap_ST_fsm_state38 = 46'd68719476736;
parameter    ap_ST_fsm_state39 = 46'd137438953472;
parameter    ap_ST_fsm_state40 = 46'd274877906944;
parameter    ap_ST_fsm_state41 = 46'd549755813888;
parameter    ap_ST_fsm_state42 = 46'd1099511627776;
parameter    ap_ST_fsm_state43 = 46'd2199023255552;
parameter    ap_ST_fsm_state44 = 46'd4398046511104;
parameter    ap_ST_fsm_state45 = 46'd8796093022208;
parameter    ap_ST_fsm_state46 = 46'd17592186044416;
parameter    ap_ST_fsm_state47 = 46'd35184372088832;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] ARows_V_a_0_dout;
input   ARows_V_a_0_empty_n;
output   ARows_V_a_0_read;
input  [15:0] ARows_V_a_1_dout;
input   ARows_V_a_1_empty_n;
output   ARows_V_a_1_read;
input  [15:0] ARows_V_a_2_dout;
input   ARows_V_a_2_empty_n;
output   ARows_V_a_2_read;
input  [15:0] ARows_V_a_3_dout;
input   ARows_V_a_3_empty_n;
output   ARows_V_a_3_read;
input  [15:0] ARows_V_a_4_dout;
input   ARows_V_a_4_empty_n;
output   ARows_V_a_4_read;
input  [15:0] ARows_V_a_5_dout;
input   ARows_V_a_5_empty_n;
output   ARows_V_a_5_read;
input  [15:0] ARows_V_a_6_dout;
input   ARows_V_a_6_empty_n;
output   ARows_V_a_6_read;
input  [15:0] ARows_V_a_7_dout;
input   ARows_V_a_7_empty_n;
output   ARows_V_a_7_read;
input  [15:0] ARows_V_a_8_dout;
input   ARows_V_a_8_empty_n;
output   ARows_V_a_8_read;
input  [15:0] ARows_V_a_9_dout;
input   ARows_V_a_9_empty_n;
output   ARows_V_a_9_read;
input  [15:0] BCols_V_a_0_dout;
input   BCols_V_a_0_empty_n;
output   BCols_V_a_0_read;
input  [15:0] BCols_V_a_1_dout;
input   BCols_V_a_1_empty_n;
output   BCols_V_a_1_read;
input  [15:0] BCols_V_a_2_dout;
input   BCols_V_a_2_empty_n;
output   BCols_V_a_2_read;
input  [15:0] BCols_V_a_3_dout;
input   BCols_V_a_3_empty_n;
output   BCols_V_a_3_read;
input  [15:0] BCols_V_a_4_dout;
input   BCols_V_a_4_empty_n;
output   BCols_V_a_4_read;
input  [15:0] BCols_V_a_5_dout;
input   BCols_V_a_5_empty_n;
output   BCols_V_a_5_read;
input  [15:0] BCols_V_a_6_dout;
input   BCols_V_a_6_empty_n;
output   BCols_V_a_6_read;
input  [15:0] BCols_V_a_7_dout;
input   BCols_V_a_7_empty_n;
output   BCols_V_a_7_read;
input  [15:0] BCols_V_a_8_dout;
input   BCols_V_a_8_empty_n;
output   BCols_V_a_8_read;
input  [15:0] BCols_V_a_9_dout;
input   BCols_V_a_9_empty_n;
output   BCols_V_a_9_read;
output  [6:0] abPartialSum_out_address0;
output   abPartialSum_out_ce0;
output   abPartialSum_out_we0;
output  [15:0] abPartialSum_out_d0;
output  [6:0] abPartialSum_out_address1;
output   abPartialSum_out_ce1;
output   abPartialSum_out_we1;
output  [15:0] abPartialSum_out_d1;
input  [15:0] iteration;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg ARows_V_a_0_read;
reg ARows_V_a_1_read;
reg ARows_V_a_2_read;
reg ARows_V_a_3_read;
reg ARows_V_a_4_read;
reg ARows_V_a_5_read;
reg ARows_V_a_6_read;
reg ARows_V_a_7_read;
reg ARows_V_a_8_read;
reg ARows_V_a_9_read;
reg BCols_V_a_0_read;
reg BCols_V_a_1_read;
reg BCols_V_a_2_read;
reg BCols_V_a_3_read;
reg BCols_V_a_4_read;
reg BCols_V_a_5_read;
reg BCols_V_a_6_read;
reg BCols_V_a_7_read;
reg BCols_V_a_8_read;
reg BCols_V_a_9_read;
reg[6:0] abPartialSum_out_address0;
reg abPartialSum_out_ce0;
reg abPartialSum_out_we0;
reg[15:0] abPartialSum_out_d0;
reg[6:0] abPartialSum_out_address1;
reg abPartialSum_out_ce1;
reg abPartialSum_out_we1;
reg[15:0] abPartialSum_out_d1;

(* fsm_encoding = "none" *) reg   [45:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] A_0_address0;
reg    A_0_ce0;
reg    A_0_we0;
wire   [15:0] A_0_q0;
reg   [9:0] A_1_address0;
reg    A_1_ce0;
reg    A_1_we0;
wire   [15:0] A_1_q0;
reg   [9:0] A_2_address0;
reg    A_2_ce0;
reg    A_2_we0;
wire   [15:0] A_2_q0;
reg   [9:0] A_3_address0;
reg    A_3_ce0;
reg    A_3_we0;
wire   [15:0] A_3_q0;
reg   [9:0] A_4_address0;
reg    A_4_ce0;
reg    A_4_we0;
wire   [15:0] A_4_q0;
reg   [9:0] A_5_address0;
reg    A_5_ce0;
reg    A_5_we0;
wire   [15:0] A_5_q0;
reg   [9:0] A_6_address0;
reg    A_6_ce0;
reg    A_6_we0;
wire   [15:0] A_6_q0;
reg   [9:0] A_7_address0;
reg    A_7_ce0;
reg    A_7_we0;
wire   [15:0] A_7_q0;
reg   [9:0] A_8_address0;
reg    A_8_ce0;
reg    A_8_we0;
wire   [15:0] A_8_q0;
reg   [9:0] A_9_address0;
reg    A_9_ce0;
reg    A_9_we0;
wire   [15:0] A_9_q0;
reg    ARows_V_a_0_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln14_reg_2813;
reg    ARows_V_a_1_blk_n;
reg    ARows_V_a_2_blk_n;
reg    ARows_V_a_3_blk_n;
reg    ARows_V_a_4_blk_n;
reg    ARows_V_a_5_blk_n;
reg    ARows_V_a_6_blk_n;
reg    ARows_V_a_7_blk_n;
reg    ARows_V_a_8_blk_n;
reg    ARows_V_a_9_blk_n;
reg    BCols_V_a_0_blk_n;
wire    ap_CS_fsm_state27;
reg    BCols_V_a_1_blk_n;
reg    BCols_V_a_2_blk_n;
reg    BCols_V_a_3_blk_n;
reg    BCols_V_a_4_blk_n;
reg    BCols_V_a_5_blk_n;
reg    BCols_V_a_6_blk_n;
reg    BCols_V_a_7_blk_n;
reg    BCols_V_a_8_blk_n;
reg    BCols_V_a_9_blk_n;
reg   [9:0] i_0_reg_1457;
wire   [15:0] AB_0_q0;
reg   [15:0] reg_1514;
wire    io_acc_block_signal_op362;
wire   [15:0] AB_0_q1;
wire    ap_CS_fsm_state37;
reg   [15:0] reg_1519;
wire   [15:0] AB_1_q0;
reg   [15:0] reg_1524;
wire   [15:0] AB_1_q1;
reg   [15:0] reg_1529;
wire   [15:0] AB_2_q0;
reg   [15:0] reg_1534;
wire   [15:0] AB_2_q1;
reg   [15:0] reg_1539;
wire   [15:0] AB_3_q0;
reg   [15:0] reg_1544;
wire   [15:0] AB_3_q1;
reg   [15:0] reg_1549;
wire   [15:0] AB_4_q0;
reg   [15:0] reg_1554;
wire   [15:0] AB_4_q1;
reg   [15:0] reg_1559;
wire   [15:0] AB_5_q0;
reg   [15:0] reg_1564;
wire    ap_CS_fsm_state28;
wire   [15:0] AB_5_q1;
reg   [15:0] reg_1569;
wire   [15:0] AB_6_q0;
reg   [15:0] reg_1574;
wire   [15:0] AB_6_q1;
reg   [15:0] reg_1579;
wire   [15:0] AB_7_q0;
reg   [15:0] reg_1584;
wire   [15:0] AB_7_q1;
wire    ap_CS_fsm_state29;
reg   [15:0] reg_1589;
wire   [15:0] AB_8_q0;
reg   [15:0] reg_1594;
wire   [15:0] AB_8_q1;
wire    ap_CS_fsm_state30;
reg   [15:0] reg_1599;
wire   [15:0] AB_9_q0;
reg   [15:0] reg_1604;
wire   [15:0] AB_9_q1;
wire    ap_CS_fsm_state31;
reg   [15:0] reg_1609;
reg   [15:0] reg_1614;
wire    ap_CS_fsm_state38;
reg   [15:0] reg_1618;
reg   [15:0] reg_1622;
reg   [15:0] reg_1626;
reg   [15:0] reg_1630;
reg   [15:0] reg_1634;
reg   [15:0] reg_1638;
reg   [15:0] reg_1642;
reg   [15:0] reg_1646;
wire    ap_CS_fsm_state39;
reg   [15:0] reg_1650;
reg   [15:0] reg_1654;
reg   [15:0] reg_1658;
reg   [15:0] reg_1662;
wire    ap_CS_fsm_state40;
reg   [15:0] reg_1666;
wire   [0:0] icmp_ln13_fu_1680_p2;
wire    ap_CS_fsm_state20;
wire   [0:0] icmp_ln14_fu_1686_p2;
wire    ap_block_state21_pp0_stage0_iter0;
wire    io_acc_block_signal_op134;
reg    ap_block_state22_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [9:0] i_fu_1692_p2;
reg   [9:0] i_reg_2817;
reg    ap_enable_reg_pp0_iter0;
wire   [3:0] add_ln23_fu_1762_p2;
reg   [3:0] add_ln23_reg_2822;
wire    ap_CS_fsm_state24;
wire   [3:0] add_ln23_1_fu_1768_p2;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln23_fu_1788_p2;
wire   [0:0] icmp_ln23_1_fu_1794_p2;
wire   [9:0] k_fu_1806_p2;
reg   [9:0] k_reg_3363;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln25_fu_1800_p2;
reg  signed [15:0] tmp_a_1_0_reg_3418;
reg  signed [15:0] tmp_a_1_1_reg_3432;
reg  signed [15:0] tmp_a_1_2_reg_3446;
reg  signed [15:0] tmp_a_1_3_reg_3460;
reg  signed [15:0] tmp_a_1_4_reg_3474;
reg  signed [15:0] tmp_a_1_5_reg_3488;
reg  signed [15:0] tmp_a_1_6_reg_3502;
reg  signed [15:0] tmp_a_1_7_reg_3516;
reg  signed [15:0] tmp_a_1_8_reg_3530;
reg  signed [15:0] tmp_a_1_9_reg_3544;
reg  signed [15:0] A_0_load_reg_3558;
reg  signed [15:0] A_1_load_reg_3572;
reg  signed [15:0] A_2_load_reg_3586;
reg  signed [15:0] A_3_load_reg_3600;
reg  signed [15:0] A_4_load_reg_3614;
reg  signed [15:0] A_5_load_reg_3628;
reg  signed [15:0] A_6_load_reg_3642;
reg  signed [15:0] A_7_load_reg_3656;
reg  signed [15:0] A_8_load_reg_3670;
reg  signed [15:0] A_9_load_reg_3684;
wire  signed [15:0] grp_fu_2200_p3;
reg  signed [15:0] add_ln30_reg_3698;
wire  signed [15:0] grp_fu_2206_p3;
reg  signed [15:0] add_ln30_1_reg_3703;
wire  signed [15:0] grp_fu_2212_p3;
reg  signed [15:0] add_ln30_2_reg_3708;
wire  signed [15:0] grp_fu_2218_p3;
reg  signed [15:0] add_ln30_3_reg_3713;
wire  signed [15:0] grp_fu_2224_p3;
reg  signed [15:0] add_ln30_10_reg_3718;
wire  signed [15:0] grp_fu_2230_p3;
reg  signed [15:0] add_ln30_11_reg_3723;
wire  signed [15:0] grp_fu_2236_p3;
reg  signed [15:0] add_ln30_12_reg_3728;
wire  signed [15:0] grp_fu_2242_p3;
reg  signed [15:0] add_ln30_13_reg_3733;
wire  signed [15:0] grp_fu_2248_p3;
reg  signed [15:0] add_ln30_20_reg_3738;
wire  signed [15:0] grp_fu_2254_p3;
reg  signed [15:0] add_ln30_21_reg_3743;
wire  signed [15:0] grp_fu_2260_p3;
reg  signed [15:0] add_ln30_22_reg_3748;
wire  signed [15:0] grp_fu_2266_p3;
reg  signed [15:0] add_ln30_23_reg_3753;
wire  signed [15:0] grp_fu_2272_p3;
reg  signed [15:0] add_ln30_30_reg_3758;
wire  signed [15:0] grp_fu_2278_p3;
reg  signed [15:0] add_ln30_31_reg_3763;
wire  signed [15:0] grp_fu_2284_p3;
reg  signed [15:0] add_ln30_32_reg_3768;
wire  signed [15:0] grp_fu_2290_p3;
reg  signed [15:0] add_ln30_33_reg_3773;
wire  signed [15:0] grp_fu_2296_p3;
reg  signed [15:0] add_ln30_40_reg_3778;
wire  signed [15:0] grp_fu_2302_p3;
reg  signed [15:0] add_ln30_41_reg_3783;
wire  signed [15:0] grp_fu_2308_p3;
reg  signed [15:0] add_ln30_42_reg_3788;
wire  signed [15:0] grp_fu_2314_p3;
reg  signed [15:0] add_ln30_43_reg_3793;
wire  signed [15:0] grp_fu_2320_p3;
reg  signed [15:0] add_ln30_50_reg_3798;
wire  signed [15:0] grp_fu_2326_p3;
reg  signed [15:0] add_ln30_51_reg_3803;
wire  signed [15:0] grp_fu_2332_p3;
reg  signed [15:0] add_ln30_52_reg_3808;
wire  signed [15:0] grp_fu_2338_p3;
reg  signed [15:0] add_ln30_4_reg_3813;
wire  signed [15:0] grp_fu_2344_p3;
reg  signed [15:0] add_ln30_5_reg_3818;
wire  signed [15:0] grp_fu_2350_p3;
reg  signed [15:0] add_ln30_14_reg_3823;
wire  signed [15:0] grp_fu_2356_p3;
reg  signed [15:0] add_ln30_15_reg_3828;
wire  signed [15:0] grp_fu_2362_p3;
reg  signed [15:0] add_ln30_24_reg_3833;
wire  signed [15:0] grp_fu_2368_p3;
reg  signed [15:0] add_ln30_25_reg_3838;
wire  signed [15:0] grp_fu_2374_p3;
reg  signed [15:0] add_ln30_34_reg_3843;
wire  signed [15:0] grp_fu_2380_p3;
reg  signed [15:0] add_ln30_35_reg_3848;
wire  signed [15:0] grp_fu_2386_p3;
reg  signed [15:0] add_ln30_44_reg_3853;
wire  signed [15:0] grp_fu_2392_p3;
reg  signed [15:0] add_ln30_45_reg_3858;
wire  signed [15:0] grp_fu_2398_p3;
reg  signed [15:0] add_ln30_53_reg_3863;
wire  signed [15:0] grp_fu_2404_p3;
reg  signed [15:0] add_ln30_54_reg_3868;
wire  signed [15:0] grp_fu_2410_p3;
reg  signed [15:0] add_ln30_55_reg_3873;
wire  signed [15:0] grp_fu_2416_p3;
reg  signed [15:0] add_ln30_60_reg_3878;
wire  signed [15:0] grp_fu_2422_p3;
reg  signed [15:0] add_ln30_61_reg_3883;
wire  signed [15:0] grp_fu_2428_p3;
reg  signed [15:0] add_ln30_62_reg_3888;
wire  signed [15:0] grp_fu_2434_p3;
reg  signed [15:0] add_ln30_63_reg_3893;
wire  signed [15:0] grp_fu_2440_p3;
reg  signed [15:0] add_ln30_64_reg_3898;
wire  signed [15:0] grp_fu_2446_p3;
reg  signed [15:0] add_ln30_65_reg_3903;
wire  signed [15:0] grp_fu_2452_p3;
reg  signed [15:0] add_ln30_70_reg_3908;
wire  signed [15:0] grp_fu_2458_p3;
reg  signed [15:0] add_ln30_71_reg_3913;
wire  signed [15:0] grp_fu_2464_p3;
reg  signed [15:0] add_ln30_72_reg_3918;
wire  signed [15:0] grp_fu_2470_p3;
reg  signed [15:0] add_ln30_73_reg_3923;
wire  signed [15:0] grp_fu_2476_p3;
reg  signed [15:0] add_ln30_6_reg_3928;
wire  signed [15:0] grp_fu_2482_p3;
reg  signed [15:0] add_ln30_7_reg_3933;
wire  signed [15:0] grp_fu_2488_p3;
reg  signed [15:0] add_ln30_16_reg_3938;
wire  signed [15:0] grp_fu_2494_p3;
reg  signed [15:0] add_ln30_17_reg_3943;
wire  signed [15:0] grp_fu_2500_p3;
reg  signed [15:0] add_ln30_26_reg_3948;
wire  signed [15:0] grp_fu_2506_p3;
reg  signed [15:0] add_ln30_27_reg_3953;
wire  signed [15:0] grp_fu_2512_p3;
reg  signed [15:0] add_ln30_36_reg_3958;
wire  signed [15:0] grp_fu_2518_p3;
reg  signed [15:0] add_ln30_37_reg_3963;
wire  signed [15:0] grp_fu_2524_p3;
reg  signed [15:0] add_ln30_46_reg_3968;
wire  signed [15:0] grp_fu_2530_p3;
reg  signed [15:0] add_ln30_47_reg_3973;
wire  signed [15:0] grp_fu_2536_p3;
reg  signed [15:0] add_ln30_56_reg_3978;
wire  signed [15:0] grp_fu_2542_p3;
reg  signed [15:0] add_ln30_57_reg_3983;
wire  signed [15:0] grp_fu_2548_p3;
reg  signed [15:0] add_ln30_66_reg_3988;
wire  signed [15:0] grp_fu_2554_p3;
reg  signed [15:0] add_ln30_67_reg_3993;
wire  signed [15:0] grp_fu_2560_p3;
reg  signed [15:0] add_ln30_74_reg_3998;
wire  signed [15:0] grp_fu_2566_p3;
reg  signed [15:0] add_ln30_75_reg_4003;
wire  signed [15:0] grp_fu_2572_p3;
reg  signed [15:0] add_ln30_76_reg_4008;
wire  signed [15:0] grp_fu_2578_p3;
reg  signed [15:0] add_ln30_77_reg_4013;
wire  signed [15:0] grp_fu_2584_p3;
reg  signed [15:0] add_ln30_80_reg_4018;
wire  signed [15:0] grp_fu_2590_p3;
reg  signed [15:0] add_ln30_81_reg_4023;
wire  signed [15:0] grp_fu_2596_p3;
reg  signed [15:0] add_ln30_82_reg_4028;
wire  signed [15:0] grp_fu_2602_p3;
reg  signed [15:0] add_ln30_83_reg_4033;
wire  signed [15:0] grp_fu_2608_p3;
reg  signed [15:0] add_ln30_84_reg_4038;
wire  signed [15:0] grp_fu_2614_p3;
reg  signed [15:0] add_ln30_8_reg_4043;
wire  signed [15:0] grp_fu_2620_p3;
reg  signed [15:0] add_ln30_9_reg_4048;
wire  signed [15:0] grp_fu_2626_p3;
reg  signed [15:0] add_ln30_18_reg_4053;
wire  signed [15:0] grp_fu_2632_p3;
reg  signed [15:0] add_ln30_19_reg_4058;
wire  signed [15:0] grp_fu_2638_p3;
reg  signed [15:0] add_ln30_28_reg_4063;
wire  signed [15:0] grp_fu_2644_p3;
reg  signed [15:0] add_ln30_29_reg_4068;
wire  signed [15:0] grp_fu_2650_p3;
reg  signed [15:0] add_ln30_38_reg_4073;
wire  signed [15:0] grp_fu_2656_p3;
reg  signed [15:0] add_ln30_39_reg_4078;
wire  signed [15:0] grp_fu_2662_p3;
reg  signed [15:0] add_ln30_48_reg_4083;
wire  signed [15:0] grp_fu_2668_p3;
reg  signed [15:0] add_ln30_49_reg_4088;
wire  signed [15:0] grp_fu_2674_p3;
reg  signed [15:0] add_ln30_58_reg_4093;
wire  signed [15:0] grp_fu_2680_p3;
reg  signed [15:0] add_ln30_59_reg_4098;
wire  signed [15:0] grp_fu_2686_p3;
reg  signed [15:0] add_ln30_68_reg_4103;
wire  signed [15:0] grp_fu_2692_p3;
reg  signed [15:0] add_ln30_69_reg_4108;
wire  signed [15:0] grp_fu_2698_p3;
reg  signed [15:0] add_ln30_78_reg_4113;
wire  signed [15:0] grp_fu_2704_p3;
reg  signed [15:0] add_ln30_79_reg_4118;
wire  signed [15:0] grp_fu_2710_p3;
reg  signed [15:0] add_ln30_85_reg_4123;
wire  signed [15:0] grp_fu_2716_p3;
reg  signed [15:0] add_ln30_86_reg_4128;
wire  signed [15:0] grp_fu_2722_p3;
reg  signed [15:0] add_ln30_87_reg_4133;
wire  signed [15:0] grp_fu_2728_p3;
reg  signed [15:0] add_ln30_88_reg_4138;
wire  signed [15:0] grp_fu_2734_p3;
reg  signed [15:0] add_ln30_89_reg_4143;
wire  signed [15:0] grp_fu_2768_p3;
reg  signed [15:0] add_ln30_94_reg_4148;
wire    ap_CS_fsm_state32;
wire  signed [15:0] grp_fu_2774_p3;
reg  signed [15:0] add_ln30_95_reg_4153;
wire  signed [15:0] grp_fu_2780_p3;
reg  signed [15:0] add_ln30_96_reg_4158;
wire  signed [15:0] grp_fu_2786_p3;
reg  signed [15:0] add_ln30_97_reg_4163;
wire  signed [15:0] grp_fu_2792_p3;
reg  signed [15:0] add_ln30_98_reg_4168;
wire  signed [15:0] grp_fu_2798_p3;
reg  signed [15:0] add_ln30_99_reg_4173;
reg   [15:0] AB_0_load_12_reg_4178;
reg   [15:0] AB_1_load_12_reg_4183;
reg   [15:0] AB_2_load_12_reg_4188;
reg   [15:0] AB_3_load_12_reg_4193;
reg   [15:0] AB_4_load_12_reg_4198;
reg   [15:0] AB_5_load_12_reg_4203;
reg   [15:0] AB_0_load_13_reg_4208;
reg   [15:0] AB_1_load_13_reg_4213;
reg   [15:0] AB_2_load_13_reg_4218;
reg   [15:0] AB_3_load_13_reg_4223;
reg   [15:0] AB_4_load_13_reg_4228;
reg   [15:0] AB_5_load_13_reg_4233;
reg   [15:0] AB_0_load_14_reg_4238;
reg   [15:0] AB_1_load_14_reg_4243;
reg   [15:0] AB_2_load_14_reg_4248;
reg   [15:0] AB_3_load_14_reg_4253;
reg   [15:0] AB_4_load_14_reg_4258;
reg   [15:0] AB_5_load_14_reg_4263;
reg   [15:0] AB_6_load_14_reg_4268;
reg   [15:0] AB_7_load_14_reg_4273;
reg   [15:0] AB_0_load_15_reg_4278;
reg   [15:0] AB_1_load_15_reg_4283;
reg   [15:0] AB_2_load_15_reg_4288;
reg   [15:0] AB_3_load_15_reg_4293;
reg   [15:0] AB_4_load_15_reg_4298;
reg   [15:0] AB_5_load_15_reg_4303;
reg   [15:0] AB_6_load_15_reg_4308;
reg   [15:0] AB_7_load_15_reg_4313;
reg   [15:0] AB_0_load_16_reg_4318;
reg   [15:0] AB_1_load_16_reg_4323;
reg   [15:0] AB_2_load_16_reg_4328;
reg   [15:0] AB_3_load_16_reg_4333;
reg   [15:0] AB_4_load_16_reg_4338;
reg   [15:0] AB_5_load_16_reg_4343;
reg   [15:0] AB_6_load_16_reg_4348;
reg   [15:0] AB_7_load_16_reg_4353;
reg   [15:0] AB_8_load_16_reg_4358;
reg   [15:0] AB_0_load_17_reg_4363;
reg   [15:0] AB_1_load_17_reg_4368;
reg   [15:0] AB_2_load_17_reg_4373;
reg   [15:0] AB_3_load_17_reg_4378;
reg   [15:0] AB_4_load_17_reg_4383;
reg   [15:0] AB_5_load_17_reg_4388;
reg   [15:0] AB_6_load_17_reg_4393;
reg   [15:0] AB_7_load_17_reg_4398;
reg   [15:0] AB_8_load_17_reg_4403;
reg   [15:0] AB_0_load_18_reg_4408;
wire    ap_CS_fsm_state41;
reg   [15:0] AB_1_load_18_reg_4413;
reg   [15:0] AB_2_load_18_reg_4418;
reg   [15:0] AB_3_load_18_reg_4423;
reg   [15:0] AB_4_load_18_reg_4428;
reg   [15:0] AB_5_load_18_reg_4433;
reg   [15:0] AB_6_load_18_reg_4438;
reg   [15:0] AB_7_load_18_reg_4443;
reg   [15:0] AB_8_load_18_reg_4448;
reg   [15:0] AB_9_load_18_reg_4453;
reg   [15:0] AB_0_load_19_reg_4458;
reg   [15:0] AB_1_load_19_reg_4463;
reg   [15:0] AB_2_load_19_reg_4468;
reg   [15:0] AB_3_load_19_reg_4473;
reg   [15:0] AB_4_load_19_reg_4478;
reg   [15:0] AB_5_load_19_reg_4483;
reg   [15:0] AB_6_load_19_reg_4488;
reg   [15:0] AB_7_load_19_reg_4493;
reg   [15:0] AB_8_load_19_reg_4498;
reg   [15:0] AB_9_load_19_reg_4503;
wire   [3:0] i_1_fu_1872_p2;
reg   [3:0] i_1_reg_4511;
wire    ap_CS_fsm_state42;
wire   [7:0] add_ln56_fu_1902_p2;
reg   [7:0] add_ln56_reg_4516;
wire   [0:0] icmp_ln53_fu_1866_p2;
wire   [15:0] tmp_5_fu_1978_p12;
reg   [15:0] tmp_5_reg_4528;
wire   [15:0] tmp_6_fu_1998_p12;
reg   [15:0] tmp_6_reg_4533;
wire   [15:0] tmp_7_fu_2018_p12;
reg   [15:0] tmp_7_reg_4538;
wire   [15:0] tmp_8_fu_2036_p12;
reg   [15:0] tmp_8_reg_4543;
wire   [15:0] tmp_9_fu_2054_p12;
reg   [15:0] tmp_9_reg_4548;
wire   [15:0] tmp_s_fu_2071_p12;
reg   [15:0] tmp_s_reg_4553;
wire   [15:0] tmp_10_fu_2088_p12;
reg   [15:0] tmp_10_reg_4558;
wire   [15:0] tmp_11_fu_2104_p12;
reg   [15:0] tmp_11_reg_4563;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state21;
reg   [3:0] AB_0_address0;
reg    AB_0_ce0;
reg    AB_0_we0;
reg   [15:0] AB_0_d0;
reg   [3:0] AB_0_address1;
reg    AB_0_ce1;
reg    AB_0_we1;
reg   [15:0] AB_0_d1;
reg   [3:0] AB_1_address0;
reg    AB_1_ce0;
reg    AB_1_we0;
reg   [15:0] AB_1_d0;
reg   [3:0] AB_1_address1;
reg    AB_1_ce1;
reg    AB_1_we1;
reg   [15:0] AB_1_d1;
reg   [3:0] AB_2_address0;
reg    AB_2_ce0;
reg    AB_2_we0;
reg   [15:0] AB_2_d0;
reg   [3:0] AB_2_address1;
reg    AB_2_ce1;
reg    AB_2_we1;
reg   [15:0] AB_2_d1;
reg   [3:0] AB_3_address0;
reg    AB_3_ce0;
reg    AB_3_we0;
reg   [15:0] AB_3_d0;
reg   [3:0] AB_3_address1;
reg    AB_3_ce1;
reg    AB_3_we1;
reg   [15:0] AB_3_d1;
reg   [3:0] AB_4_address0;
reg    AB_4_ce0;
reg    AB_4_we0;
reg   [15:0] AB_4_d0;
reg   [3:0] AB_4_address1;
reg    AB_4_ce1;
reg    AB_4_we1;
reg   [15:0] AB_4_d1;
reg   [3:0] AB_5_address0;
reg    AB_5_ce0;
reg    AB_5_we0;
reg   [15:0] AB_5_d0;
reg   [3:0] AB_5_address1;
reg    AB_5_ce1;
reg    AB_5_we1;
reg   [15:0] AB_5_d1;
reg   [3:0] AB_6_address0;
reg    AB_6_ce0;
reg    AB_6_we0;
reg   [15:0] AB_6_d0;
reg   [3:0] AB_6_address1;
reg    AB_6_ce1;
reg    AB_6_we1;
reg   [15:0] AB_6_d1;
reg   [3:0] AB_7_address0;
reg    AB_7_ce0;
reg    AB_7_we0;
reg   [15:0] AB_7_d0;
reg   [3:0] AB_7_address1;
reg    AB_7_ce1;
reg    AB_7_we1;
reg   [15:0] AB_7_d1;
reg   [3:0] AB_8_address0;
reg    AB_8_ce0;
reg    AB_8_we0;
reg   [15:0] AB_8_d0;
reg   [3:0] AB_8_address1;
reg    AB_8_ce1;
reg    AB_8_we1;
reg   [15:0] AB_8_d1;
reg   [3:0] AB_9_address0;
reg    AB_9_ce0;
reg    AB_9_we0;
reg   [15:0] AB_9_d0;
reg   [3:0] AB_9_address1;
reg    AB_9_ce1;
reg    AB_9_we1;
reg   [15:0] AB_9_d1;
reg   [9:0] ap_phi_mux_i_0_phi_fu_1461_p4;
reg   [3:0] phi_ln23_reg_1469;
wire    ap_CS_fsm_state23;
reg   [3:0] phi_ln23_1_reg_1481;
reg   [9:0] k_0_reg_1492;
wire    ap_CS_fsm_state35;
reg   [3:0] i3_0_reg_1503;
wire    ap_CS_fsm_state46;
wire   [63:0] zext_ln18_fu_1748_p1;
wire   [63:0] zext_ln23_fu_1774_p1;
wire   [63:0] zext_ln30_fu_1812_p1;
wire   [63:0] zext_ln56_2_fu_1908_p1;
wire   [63:0] zext_ln56_3_fu_1919_p1;
wire  signed [63:0] sext_ln56_fu_2125_p1;
wire    ap_CS_fsm_state43;
wire  signed [63:0] sext_ln56_1_fu_2135_p1;
wire  signed [63:0] sext_ln56_2_fu_2145_p1;
wire    ap_CS_fsm_state44;
wire  signed [63:0] sext_ln56_3_fu_2155_p1;
wire  signed [63:0] sext_ln56_4_fu_2165_p1;
wire    ap_CS_fsm_state45;
wire  signed [63:0] sext_ln56_5_fu_2175_p1;
wire  signed [63:0] sext_ln56_6_fu_2185_p1;
wire  signed [63:0] sext_ln56_7_fu_2195_p1;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire  signed [15:0] grp_fu_2740_p3;
wire  signed [15:0] grp_fu_2747_p3;
wire  signed [15:0] grp_fu_2754_p3;
wire  signed [15:0] grp_fu_2761_p3;
wire   [15:0] tmp_3_fu_1924_p12;
wire   [15:0] tmp_4_fu_1951_p12;
wire   [7:0] grp_fu_1670_p1;
wire   [7:0] grp_fu_1670_p2;
wire   [7:0] trunc_ln9_fu_1676_p1;
wire   [6:0] tmp_12_fu_1878_p3;
wire   [4:0] tmp_13_fu_1890_p3;
wire   [7:0] zext_ln56_1_fu_1898_p1;
wire   [7:0] zext_ln56_fu_1886_p1;
wire   [7:0] or_ln56_fu_1913_p2;
wire   [7:0] add_ln56_1_fu_2120_p2;
wire   [7:0] add_ln56_2_fu_2130_p2;
wire   [7:0] add_ln56_3_fu_2140_p2;
wire   [7:0] add_ln56_4_fu_2150_p2;
wire   [7:0] add_ln56_5_fu_2160_p2;
wire   [7:0] add_ln56_6_fu_2170_p2;
wire   [7:0] add_ln56_7_fu_2180_p2;
wire   [7:0] add_ln56_8_fu_2190_p2;
reg    grp_fu_1670_ap_start;
wire    grp_fu_1670_ap_done;
wire    ap_CS_fsm_state47;
reg   [45:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;

// power-on initialization
initial begin
#0 ap_CS_fsm = 46'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
end

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_0_address0),
    .ce0(A_0_ce0),
    .we0(A_0_we0),
    .d0(ARows_V_a_0_dout),
    .q0(A_0_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_1_address0),
    .ce0(A_1_ce0),
    .we0(A_1_we0),
    .d0(ARows_V_a_1_dout),
    .q0(A_1_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_2_address0),
    .ce0(A_2_ce0),
    .we0(A_2_we0),
    .d0(ARows_V_a_2_dout),
    .q0(A_2_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_3_address0),
    .ce0(A_3_ce0),
    .we0(A_3_we0),
    .d0(ARows_V_a_3_dout),
    .q0(A_3_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_4_address0),
    .ce0(A_4_ce0),
    .we0(A_4_we0),
    .d0(ARows_V_a_4_dout),
    .q0(A_4_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_5_address0),
    .ce0(A_5_ce0),
    .we0(A_5_we0),
    .d0(ARows_V_a_5_dout),
    .q0(A_5_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_6_address0),
    .ce0(A_6_ce0),
    .we0(A_6_we0),
    .d0(ARows_V_a_6_dout),
    .q0(A_6_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_7_address0),
    .ce0(A_7_ce0),
    .we0(A_7_we0),
    .d0(ARows_V_a_7_dout),
    .q0(A_7_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_8_address0),
    .ce0(A_8_ce0),
    .we0(A_8_we0),
    .d0(ARows_V_a_8_dout),
    .q0(A_8_q0)
);

block_mmul_A_0 #(
    .DataWidth( 16 ),
    .AddressRange( 1000 ),
    .AddressWidth( 10 ))
A_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(A_9_address0),
    .ce0(A_9_ce0),
    .we0(A_9_we0),
    .d0(ARows_V_a_9_dout),
    .q0(A_9_q0)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_0_address0),
    .ce0(AB_0_ce0),
    .we0(AB_0_we0),
    .d0(AB_0_d0),
    .q0(AB_0_q0),
    .address1(AB_0_address1),
    .ce1(AB_0_ce1),
    .we1(AB_0_we1),
    .d1(AB_0_d1),
    .q1(AB_0_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_1_address0),
    .ce0(AB_1_ce0),
    .we0(AB_1_we0),
    .d0(AB_1_d0),
    .q0(AB_1_q0),
    .address1(AB_1_address1),
    .ce1(AB_1_ce1),
    .we1(AB_1_we1),
    .d1(AB_1_d1),
    .q1(AB_1_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_2_address0),
    .ce0(AB_2_ce0),
    .we0(AB_2_we0),
    .d0(AB_2_d0),
    .q0(AB_2_q0),
    .address1(AB_2_address1),
    .ce1(AB_2_ce1),
    .we1(AB_2_we1),
    .d1(AB_2_d1),
    .q1(AB_2_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_3_address0),
    .ce0(AB_3_ce0),
    .we0(AB_3_we0),
    .d0(AB_3_d0),
    .q0(AB_3_q0),
    .address1(AB_3_address1),
    .ce1(AB_3_ce1),
    .we1(AB_3_we1),
    .d1(AB_3_d1),
    .q1(AB_3_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_4_address0),
    .ce0(AB_4_ce0),
    .we0(AB_4_we0),
    .d0(AB_4_d0),
    .q0(AB_4_q0),
    .address1(AB_4_address1),
    .ce1(AB_4_ce1),
    .we1(AB_4_we1),
    .d1(AB_4_d1),
    .q1(AB_4_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_5_address0),
    .ce0(AB_5_ce0),
    .we0(AB_5_we0),
    .d0(AB_5_d0),
    .q0(AB_5_q0),
    .address1(AB_5_address1),
    .ce1(AB_5_ce1),
    .we1(AB_5_we1),
    .d1(AB_5_d1),
    .q1(AB_5_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_6_address0),
    .ce0(AB_6_ce0),
    .we0(AB_6_we0),
    .d0(AB_6_d0),
    .q0(AB_6_q0),
    .address1(AB_6_address1),
    .ce1(AB_6_ce1),
    .we1(AB_6_we1),
    .d1(AB_6_d1),
    .q1(AB_6_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_7_address0),
    .ce0(AB_7_ce0),
    .we0(AB_7_we0),
    .d0(AB_7_d0),
    .q0(AB_7_q0),
    .address1(AB_7_address1),
    .ce1(AB_7_ce1),
    .we1(AB_7_we1),
    .d1(AB_7_d1),
    .q1(AB_7_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_8_address0),
    .ce0(AB_8_ce0),
    .we0(AB_8_we0),
    .d0(AB_8_d0),
    .q0(AB_8_q0),
    .address1(AB_8_address1),
    .ce1(AB_8_ce1),
    .we1(AB_8_we1),
    .d1(AB_8_d1),
    .q1(AB_8_q1)
);

block_mmul_AB_0 #(
    .DataWidth( 16 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
AB_9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(AB_9_address0),
    .ce0(AB_9_ce0),
    .we0(AB_9_we0),
    .d0(AB_9_d0),
    .q0(AB_9_q0),
    .address1(AB_9_address1),
    .ce1(AB_9_ce1),
    .we1(AB_9_we1),
    .d1(AB_9_d1),
    .q1(AB_9_q1)
);

block_mmul_srem_1bkb #(
    .ID( 1 ),
    .NUM_STAGE( 20 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 8 ))
block_mmul_srem_1bkb_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_1670_ap_start),
    .done(grp_fu_1670_ap_done),
    .din0(iteration),
    .din1(grp_fu_1670_p1),
    .ce(1'b1),
    .dout(grp_fu_1670_p2)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U2(
    .din0(reg_1514),
    .din1(reg_1524),
    .din2(reg_1534),
    .din3(reg_1544),
    .din4(reg_1554),
    .din5(reg_1564),
    .din6(reg_1574),
    .din7(reg_1584),
    .din8(reg_1594),
    .din9(reg_1604),
    .din10(i3_0_reg_1503),
    .dout(tmp_3_fu_1924_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U3(
    .din0(reg_1519),
    .din1(reg_1529),
    .din2(reg_1539),
    .din3(reg_1549),
    .din4(reg_1559),
    .din5(reg_1569),
    .din6(reg_1579),
    .din7(reg_1589),
    .din8(reg_1599),
    .din9(reg_1609),
    .din10(i3_0_reg_1503),
    .dout(tmp_4_fu_1951_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U4(
    .din0(AB_0_load_12_reg_4178),
    .din1(AB_1_load_12_reg_4183),
    .din2(AB_2_load_12_reg_4188),
    .din3(AB_3_load_12_reg_4193),
    .din4(AB_4_load_12_reg_4198),
    .din5(AB_5_load_12_reg_4203),
    .din6(reg_1614),
    .din7(reg_1622),
    .din8(reg_1630),
    .din9(reg_1638),
    .din10(i3_0_reg_1503),
    .dout(tmp_5_fu_1978_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U5(
    .din0(AB_0_load_13_reg_4208),
    .din1(AB_1_load_13_reg_4213),
    .din2(AB_2_load_13_reg_4218),
    .din3(AB_3_load_13_reg_4223),
    .din4(AB_4_load_13_reg_4228),
    .din5(AB_5_load_13_reg_4233),
    .din6(reg_1618),
    .din7(reg_1626),
    .din8(reg_1634),
    .din9(reg_1642),
    .din10(i3_0_reg_1503),
    .dout(tmp_6_fu_1998_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U6(
    .din0(AB_0_load_14_reg_4238),
    .din1(AB_1_load_14_reg_4243),
    .din2(AB_2_load_14_reg_4248),
    .din3(AB_3_load_14_reg_4253),
    .din4(AB_4_load_14_reg_4258),
    .din5(AB_5_load_14_reg_4263),
    .din6(AB_6_load_14_reg_4268),
    .din7(AB_7_load_14_reg_4273),
    .din8(reg_1646),
    .din9(reg_1654),
    .din10(i3_0_reg_1503),
    .dout(tmp_7_fu_2018_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U7(
    .din0(AB_0_load_15_reg_4278),
    .din1(AB_1_load_15_reg_4283),
    .din2(AB_2_load_15_reg_4288),
    .din3(AB_3_load_15_reg_4293),
    .din4(AB_4_load_15_reg_4298),
    .din5(AB_5_load_15_reg_4303),
    .din6(AB_6_load_15_reg_4308),
    .din7(AB_7_load_15_reg_4313),
    .din8(reg_1650),
    .din9(reg_1658),
    .din10(i3_0_reg_1503),
    .dout(tmp_8_fu_2036_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U8(
    .din0(AB_0_load_16_reg_4318),
    .din1(AB_1_load_16_reg_4323),
    .din2(AB_2_load_16_reg_4328),
    .din3(AB_3_load_16_reg_4333),
    .din4(AB_4_load_16_reg_4338),
    .din5(AB_5_load_16_reg_4343),
    .din6(AB_6_load_16_reg_4348),
    .din7(AB_7_load_16_reg_4353),
    .din8(AB_8_load_16_reg_4358),
    .din9(reg_1662),
    .din10(i3_0_reg_1503),
    .dout(tmp_9_fu_2054_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U9(
    .din0(AB_0_load_17_reg_4363),
    .din1(AB_1_load_17_reg_4368),
    .din2(AB_2_load_17_reg_4373),
    .din3(AB_3_load_17_reg_4378),
    .din4(AB_4_load_17_reg_4383),
    .din5(AB_5_load_17_reg_4388),
    .din6(AB_6_load_17_reg_4393),
    .din7(AB_7_load_17_reg_4398),
    .din8(AB_8_load_17_reg_4403),
    .din9(reg_1666),
    .din10(i3_0_reg_1503),
    .dout(tmp_s_fu_2071_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U10(
    .din0(AB_0_load_18_reg_4408),
    .din1(AB_1_load_18_reg_4413),
    .din2(AB_2_load_18_reg_4418),
    .din3(AB_3_load_18_reg_4423),
    .din4(AB_4_load_18_reg_4428),
    .din5(AB_5_load_18_reg_4433),
    .din6(AB_6_load_18_reg_4438),
    .din7(AB_7_load_18_reg_4443),
    .din8(AB_8_load_18_reg_4448),
    .din9(AB_9_load_18_reg_4453),
    .din10(i3_0_reg_1503),
    .dout(tmp_10_fu_2088_p12)
);

block_mmul_mux_10cud #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
block_mmul_mux_10cud_U11(
    .din0(AB_0_load_19_reg_4458),
    .din1(AB_1_load_19_reg_4463),
    .din2(AB_2_load_19_reg_4468),
    .din3(AB_3_load_19_reg_4473),
    .din4(AB_4_load_19_reg_4478),
    .din5(AB_5_load_19_reg_4483),
    .din6(AB_6_load_19_reg_4488),
    .din7(AB_7_load_19_reg_4493),
    .din8(AB_8_load_19_reg_4498),
    .din9(AB_9_load_19_reg_4503),
    .din10(i3_0_reg_1503),
    .dout(tmp_11_fu_2104_p12)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U12(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1514),
    .dout(grp_fu_2200_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U13(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1519),
    .dout(grp_fu_2206_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U14(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_0_q1),
    .dout(grp_fu_2212_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U15(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_3_reg_3460),
    .din2(AB_0_q0),
    .dout(grp_fu_2218_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U16(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1524),
    .dout(grp_fu_2224_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U17(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1529),
    .dout(grp_fu_2230_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U18(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_1_q1),
    .dout(grp_fu_2236_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U19(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_3_reg_3460),
    .din2(AB_1_q0),
    .dout(grp_fu_2242_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U20(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1534),
    .dout(grp_fu_2248_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U21(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1539),
    .dout(grp_fu_2254_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U22(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_2_q1),
    .dout(grp_fu_2260_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U23(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_3_reg_3460),
    .din2(AB_2_q0),
    .dout(grp_fu_2266_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U24(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1544),
    .dout(grp_fu_2272_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U25(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1549),
    .dout(grp_fu_2278_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U26(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_3_q1),
    .dout(grp_fu_2284_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U27(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_3_reg_3460),
    .din2(AB_3_q0),
    .dout(grp_fu_2290_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U28(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1554),
    .dout(grp_fu_2296_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U29(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1559),
    .dout(grp_fu_2302_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U30(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_4_q1),
    .dout(grp_fu_2308_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U31(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_3_reg_3460),
    .din2(AB_4_q0),
    .dout(grp_fu_2314_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U32(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1564),
    .dout(grp_fu_2320_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U33(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1569),
    .dout(grp_fu_2326_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U34(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_2_reg_3446),
    .din2(AB_5_q1),
    .dout(grp_fu_2332_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U35(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_0_q1),
    .dout(grp_fu_2338_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U36(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_0_q0),
    .dout(grp_fu_2344_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U37(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_1_q1),
    .dout(grp_fu_2350_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U38(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_1_q0),
    .dout(grp_fu_2356_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U39(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_2_q1),
    .dout(grp_fu_2362_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U40(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_2_q0),
    .dout(grp_fu_2368_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U41(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_3_q1),
    .dout(grp_fu_2374_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U42(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_3_q0),
    .dout(grp_fu_2380_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U43(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_4_q1),
    .dout(grp_fu_2386_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U44(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_4_q0),
    .dout(grp_fu_2392_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U45(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_3_reg_3460),
    .din2(reg_1564),
    .dout(grp_fu_2398_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U46(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_5_q1),
    .dout(grp_fu_2404_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U47(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_5_q0),
    .dout(grp_fu_2410_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U48(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1574),
    .dout(grp_fu_2416_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U49(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1579),
    .dout(grp_fu_2422_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U50(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_2_reg_3446),
    .din2(reg_1614),
    .dout(grp_fu_2428_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U51(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_3_reg_3460),
    .din2(reg_1618),
    .dout(grp_fu_2434_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U52(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_4_reg_3474),
    .din2(AB_6_q1),
    .dout(grp_fu_2440_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U53(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_5_reg_3488),
    .din2(AB_6_q0),
    .dout(grp_fu_2446_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U54(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1584),
    .dout(grp_fu_2452_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U55(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1589),
    .dout(grp_fu_2458_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U56(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_2_reg_3446),
    .din2(reg_1622),
    .dout(grp_fu_2464_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U57(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_3_reg_3460),
    .din2(reg_1626),
    .dout(grp_fu_2470_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U58(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_0_q1),
    .dout(grp_fu_2476_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U59(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_0_q0),
    .dout(grp_fu_2482_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U60(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_1_q1),
    .dout(grp_fu_2488_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U61(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_1_q0),
    .dout(grp_fu_2494_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U62(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_2_q1),
    .dout(grp_fu_2500_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U63(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_2_q0),
    .dout(grp_fu_2506_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U64(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_3_q1),
    .dout(grp_fu_2512_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U65(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_3_q0),
    .dout(grp_fu_2518_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U66(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_4_q1),
    .dout(grp_fu_2524_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U67(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_4_q0),
    .dout(grp_fu_2530_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U68(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_5_q1),
    .dout(grp_fu_2536_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U69(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_5_q0),
    .dout(grp_fu_2542_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U70(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_6_q1),
    .dout(grp_fu_2548_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U71(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_6_q0),
    .dout(grp_fu_2554_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U72(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_4_reg_3474),
    .din2(reg_1584),
    .dout(grp_fu_2560_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U73(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_5_reg_3488),
    .din2(reg_1589),
    .dout(grp_fu_2566_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U74(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_6_reg_3502),
    .din2(AB_7_q1),
    .dout(grp_fu_2572_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U75(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_7_reg_3516),
    .din2(AB_7_q0),
    .dout(grp_fu_2578_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U76(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1594),
    .dout(grp_fu_2584_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U77(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1599),
    .dout(grp_fu_2590_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U78(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_2_reg_3446),
    .din2(reg_1630),
    .dout(grp_fu_2596_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U79(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_3_reg_3460),
    .din2(reg_1634),
    .dout(grp_fu_2602_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U80(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_4_reg_3474),
    .din2(reg_1646),
    .dout(grp_fu_2608_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U81(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_0_q1),
    .dout(grp_fu_2614_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U82(
    .din0(A_0_load_reg_3558),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_0_q0),
    .dout(grp_fu_2620_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U83(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_1_q1),
    .dout(grp_fu_2626_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U84(
    .din0(A_1_load_reg_3572),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_1_q0),
    .dout(grp_fu_2632_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U85(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_2_q1),
    .dout(grp_fu_2638_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U86(
    .din0(A_2_load_reg_3586),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_2_q0),
    .dout(grp_fu_2644_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U87(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_3_q1),
    .dout(grp_fu_2650_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U88(
    .din0(A_3_load_reg_3600),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_3_q0),
    .dout(grp_fu_2656_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U89(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_4_q1),
    .dout(grp_fu_2662_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U90(
    .din0(A_4_load_reg_3614),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_4_q0),
    .dout(grp_fu_2668_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U91(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_5_q1),
    .dout(grp_fu_2674_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U92(
    .din0(A_5_load_reg_3628),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_5_q0),
    .dout(grp_fu_2680_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U93(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_6_q1),
    .dout(grp_fu_2686_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U94(
    .din0(A_6_load_reg_3642),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_6_q0),
    .dout(grp_fu_2692_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U95(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_7_q1),
    .dout(grp_fu_2698_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U96(
    .din0(A_7_load_reg_3656),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_7_q0),
    .dout(grp_fu_2704_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U97(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_5_reg_3488),
    .din2(reg_1650),
    .dout(grp_fu_2710_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U98(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_6_reg_3502),
    .din2(reg_1594),
    .dout(grp_fu_2716_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U99(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_7_reg_3516),
    .din2(reg_1599),
    .dout(grp_fu_2722_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U100(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_8_reg_3530),
    .din2(AB_8_q1),
    .dout(grp_fu_2728_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U101(
    .din0(A_8_load_reg_3670),
    .din1(tmp_a_1_9_reg_3544),
    .din2(AB_8_q0),
    .dout(grp_fu_2734_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U102(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_0_reg_3418),
    .din2(reg_1604),
    .dout(grp_fu_2740_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U103(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_1_reg_3432),
    .din2(reg_1609),
    .dout(grp_fu_2747_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U104(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_2_reg_3446),
    .din2(reg_1638),
    .dout(grp_fu_2754_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U105(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_3_reg_3460),
    .din2(reg_1642),
    .dout(grp_fu_2761_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U106(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_4_reg_3474),
    .din2(reg_1654),
    .dout(grp_fu_2768_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U107(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_5_reg_3488),
    .din2(reg_1658),
    .dout(grp_fu_2774_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U108(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_6_reg_3502),
    .din2(reg_1662),
    .dout(grp_fu_2780_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U109(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_7_reg_3516),
    .din2(reg_1666),
    .dout(grp_fu_2786_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U110(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_8_reg_3530),
    .din2(reg_1604),
    .dout(grp_fu_2792_p3)
);

block_mmul_mac_mudEe #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
block_mmul_mac_mudEe_U111(
    .din0(A_9_load_reg_3684),
    .din1(tmp_a_1_9_reg_3544),
    .din2(reg_1609),
    .dout(grp_fu_2798_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state21) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln13_fu_1680_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state21) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((icmp_ln13_fu_1680_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        i3_0_reg_1503 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        i3_0_reg_1503 <= i_1_reg_4511;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln13_fu_1680_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        i_0_reg_1457 <= 10'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_1457 <= i_reg_2817;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_1_fu_1794_p2 == 1'd1) & (icmp_ln23_fu_1788_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        k_0_reg_1492 <= 10'd0;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        k_0_reg_1492 <= k_reg_3363;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1788_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        phi_ln23_1_reg_1481 <= add_ln23_1_fu_1768_p2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        phi_ln23_1_reg_1481 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln23_fu_1788_p2 == 1'd1) & (icmp_ln23_1_fu_1794_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
        phi_ln23_reg_1469 <= add_ln23_reg_2822;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        phi_ln23_reg_1469 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1514 <= AB_0_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1514 <= AB_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1519 <= AB_0_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1519 <= AB_0_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1524 <= AB_1_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1524 <= AB_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1529 <= AB_1_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1529 <= AB_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1534 <= AB_2_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1534 <= AB_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1539 <= AB_2_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1539 <= AB_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1544 <= AB_3_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1544 <= AB_3_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1549 <= AB_3_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1549 <= AB_3_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1554 <= AB_4_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1554 <= AB_4_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1559 <= AB_4_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1559 <= AB_4_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1564 <= AB_5_q1;
    end else if (((1'b1 == ap_CS_fsm_state28) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        reg_1564 <= AB_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1569 <= AB_5_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1569 <= AB_5_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1574 <= AB_6_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1574 <= AB_6_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        reg_1579 <= AB_6_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1579 <= AB_6_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1584 <= AB_7_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1584 <= AB_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1589 <= AB_7_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1589 <= AB_7_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1594 <= AB_8_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1594 <= AB_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1599 <= AB_8_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1599 <= AB_8_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1604 <= AB_9_q1;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1604 <= AB_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state37))) begin
        reg_1609 <= AB_9_q0;
    end else if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        reg_1609 <= AB_9_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        AB_0_load_12_reg_4178 <= AB_0_q1;
        AB_0_load_13_reg_4208 <= AB_0_q0;
        AB_1_load_12_reg_4183 <= AB_1_q1;
        AB_1_load_13_reg_4213 <= AB_1_q0;
        AB_2_load_12_reg_4188 <= AB_2_q1;
        AB_2_load_13_reg_4218 <= AB_2_q0;
        AB_3_load_12_reg_4193 <= AB_3_q1;
        AB_3_load_13_reg_4223 <= AB_3_q0;
        AB_4_load_12_reg_4198 <= AB_4_q1;
        AB_4_load_13_reg_4228 <= AB_4_q0;
        AB_5_load_12_reg_4203 <= AB_5_q1;
        AB_5_load_13_reg_4233 <= AB_5_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        AB_0_load_14_reg_4238 <= AB_0_q1;
        AB_0_load_15_reg_4278 <= AB_0_q0;
        AB_1_load_14_reg_4243 <= AB_1_q1;
        AB_1_load_15_reg_4283 <= AB_1_q0;
        AB_2_load_14_reg_4248 <= AB_2_q1;
        AB_2_load_15_reg_4288 <= AB_2_q0;
        AB_3_load_14_reg_4253 <= AB_3_q1;
        AB_3_load_15_reg_4293 <= AB_3_q0;
        AB_4_load_14_reg_4258 <= AB_4_q1;
        AB_4_load_15_reg_4298 <= AB_4_q0;
        AB_5_load_14_reg_4263 <= AB_5_q1;
        AB_5_load_15_reg_4303 <= AB_5_q0;
        AB_6_load_14_reg_4268 <= AB_6_q1;
        AB_6_load_15_reg_4308 <= AB_6_q0;
        AB_7_load_14_reg_4273 <= AB_7_q1;
        AB_7_load_15_reg_4313 <= AB_7_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        AB_0_load_16_reg_4318 <= AB_0_q1;
        AB_0_load_17_reg_4363 <= AB_0_q0;
        AB_1_load_16_reg_4323 <= AB_1_q1;
        AB_1_load_17_reg_4368 <= AB_1_q0;
        AB_2_load_16_reg_4328 <= AB_2_q1;
        AB_2_load_17_reg_4373 <= AB_2_q0;
        AB_3_load_16_reg_4333 <= AB_3_q1;
        AB_3_load_17_reg_4378 <= AB_3_q0;
        AB_4_load_16_reg_4338 <= AB_4_q1;
        AB_4_load_17_reg_4383 <= AB_4_q0;
        AB_5_load_16_reg_4343 <= AB_5_q1;
        AB_5_load_17_reg_4388 <= AB_5_q0;
        AB_6_load_16_reg_4348 <= AB_6_q1;
        AB_6_load_17_reg_4393 <= AB_6_q0;
        AB_7_load_16_reg_4353 <= AB_7_q1;
        AB_7_load_17_reg_4398 <= AB_7_q0;
        AB_8_load_16_reg_4358 <= AB_8_q1;
        AB_8_load_17_reg_4403 <= AB_8_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        AB_0_load_18_reg_4408 <= AB_0_q1;
        AB_0_load_19_reg_4458 <= AB_0_q0;
        AB_1_load_18_reg_4413 <= AB_1_q1;
        AB_1_load_19_reg_4463 <= AB_1_q0;
        AB_2_load_18_reg_4418 <= AB_2_q1;
        AB_2_load_19_reg_4468 <= AB_2_q0;
        AB_3_load_18_reg_4423 <= AB_3_q1;
        AB_3_load_19_reg_4473 <= AB_3_q0;
        AB_4_load_18_reg_4428 <= AB_4_q1;
        AB_4_load_19_reg_4478 <= AB_4_q0;
        AB_5_load_18_reg_4433 <= AB_5_q1;
        AB_5_load_19_reg_4483 <= AB_5_q0;
        AB_6_load_18_reg_4438 <= AB_6_q1;
        AB_6_load_19_reg_4488 <= AB_6_q0;
        AB_7_load_18_reg_4443 <= AB_7_q1;
        AB_7_load_19_reg_4493 <= AB_7_q0;
        AB_8_load_18_reg_4448 <= AB_8_q1;
        AB_8_load_19_reg_4498 <= AB_8_q0;
        AB_9_load_18_reg_4453 <= AB_9_q1;
        AB_9_load_19_reg_4503 <= AB_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        A_0_load_reg_3558 <= A_0_q0;
        A_1_load_reg_3572 <= A_1_q0;
        A_2_load_reg_3586 <= A_2_q0;
        A_3_load_reg_3600 <= A_3_q0;
        A_4_load_reg_3614 <= A_4_q0;
        A_5_load_reg_3628 <= A_5_q0;
        A_6_load_reg_3642 <= A_6_q0;
        A_7_load_reg_3656 <= A_7_q0;
        A_8_load_reg_3670 <= A_8_q0;
        A_9_load_reg_3684 <= A_9_q0;
        tmp_a_1_0_reg_3418 <= BCols_V_a_0_dout;
        tmp_a_1_1_reg_3432 <= BCols_V_a_1_dout;
        tmp_a_1_2_reg_3446 <= BCols_V_a_2_dout;
        tmp_a_1_3_reg_3460 <= BCols_V_a_3_dout;
        tmp_a_1_4_reg_3474 <= BCols_V_a_4_dout;
        tmp_a_1_5_reg_3488 <= BCols_V_a_5_dout;
        tmp_a_1_6_reg_3502 <= BCols_V_a_6_dout;
        tmp_a_1_7_reg_3516 <= BCols_V_a_7_dout;
        tmp_a_1_8_reg_3530 <= BCols_V_a_8_dout;
        tmp_a_1_9_reg_3544 <= BCols_V_a_9_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        add_ln23_reg_2822 <= add_ln23_fu_1762_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        add_ln30_10_reg_3718 <= grp_fu_2224_p3;
        add_ln30_11_reg_3723 <= grp_fu_2230_p3;
        add_ln30_12_reg_3728 <= grp_fu_2236_p3;
        add_ln30_13_reg_3733 <= grp_fu_2242_p3;
        add_ln30_1_reg_3703 <= grp_fu_2206_p3;
        add_ln30_20_reg_3738 <= grp_fu_2248_p3;
        add_ln30_21_reg_3743 <= grp_fu_2254_p3;
        add_ln30_22_reg_3748 <= grp_fu_2260_p3;
        add_ln30_23_reg_3753 <= grp_fu_2266_p3;
        add_ln30_2_reg_3708 <= grp_fu_2212_p3;
        add_ln30_30_reg_3758 <= grp_fu_2272_p3;
        add_ln30_31_reg_3763 <= grp_fu_2278_p3;
        add_ln30_32_reg_3768 <= grp_fu_2284_p3;
        add_ln30_33_reg_3773 <= grp_fu_2290_p3;
        add_ln30_3_reg_3713 <= grp_fu_2218_p3;
        add_ln30_40_reg_3778 <= grp_fu_2296_p3;
        add_ln30_41_reg_3783 <= grp_fu_2302_p3;
        add_ln30_42_reg_3788 <= grp_fu_2308_p3;
        add_ln30_43_reg_3793 <= grp_fu_2314_p3;
        add_ln30_50_reg_3798 <= grp_fu_2320_p3;
        add_ln30_51_reg_3803 <= grp_fu_2326_p3;
        add_ln30_52_reg_3808 <= grp_fu_2332_p3;
        add_ln30_reg_3698 <= grp_fu_2200_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        add_ln30_14_reg_3823 <= grp_fu_2350_p3;
        add_ln30_15_reg_3828 <= grp_fu_2356_p3;
        add_ln30_24_reg_3833 <= grp_fu_2362_p3;
        add_ln30_25_reg_3838 <= grp_fu_2368_p3;
        add_ln30_34_reg_3843 <= grp_fu_2374_p3;
        add_ln30_35_reg_3848 <= grp_fu_2380_p3;
        add_ln30_44_reg_3853 <= grp_fu_2386_p3;
        add_ln30_45_reg_3858 <= grp_fu_2392_p3;
        add_ln30_4_reg_3813 <= grp_fu_2338_p3;
        add_ln30_53_reg_3863 <= grp_fu_2398_p3;
        add_ln30_54_reg_3868 <= grp_fu_2404_p3;
        add_ln30_55_reg_3873 <= grp_fu_2410_p3;
        add_ln30_5_reg_3818 <= grp_fu_2344_p3;
        add_ln30_60_reg_3878 <= grp_fu_2416_p3;
        add_ln30_61_reg_3883 <= grp_fu_2422_p3;
        add_ln30_62_reg_3888 <= grp_fu_2428_p3;
        add_ln30_63_reg_3893 <= grp_fu_2434_p3;
        add_ln30_64_reg_3898 <= grp_fu_2440_p3;
        add_ln30_65_reg_3903 <= grp_fu_2446_p3;
        add_ln30_70_reg_3908 <= grp_fu_2452_p3;
        add_ln30_71_reg_3913 <= grp_fu_2458_p3;
        add_ln30_72_reg_3918 <= grp_fu_2464_p3;
        add_ln30_73_reg_3923 <= grp_fu_2470_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln30_16_reg_3938 <= grp_fu_2488_p3;
        add_ln30_17_reg_3943 <= grp_fu_2494_p3;
        add_ln30_26_reg_3948 <= grp_fu_2500_p3;
        add_ln30_27_reg_3953 <= grp_fu_2506_p3;
        add_ln30_36_reg_3958 <= grp_fu_2512_p3;
        add_ln30_37_reg_3963 <= grp_fu_2518_p3;
        add_ln30_46_reg_3968 <= grp_fu_2524_p3;
        add_ln30_47_reg_3973 <= grp_fu_2530_p3;
        add_ln30_56_reg_3978 <= grp_fu_2536_p3;
        add_ln30_57_reg_3983 <= grp_fu_2542_p3;
        add_ln30_66_reg_3988 <= grp_fu_2548_p3;
        add_ln30_67_reg_3993 <= grp_fu_2554_p3;
        add_ln30_6_reg_3928 <= grp_fu_2476_p3;
        add_ln30_74_reg_3998 <= grp_fu_2560_p3;
        add_ln30_75_reg_4003 <= grp_fu_2566_p3;
        add_ln30_76_reg_4008 <= grp_fu_2572_p3;
        add_ln30_77_reg_4013 <= grp_fu_2578_p3;
        add_ln30_7_reg_3933 <= grp_fu_2482_p3;
        add_ln30_80_reg_4018 <= grp_fu_2584_p3;
        add_ln30_81_reg_4023 <= grp_fu_2590_p3;
        add_ln30_82_reg_4028 <= grp_fu_2596_p3;
        add_ln30_83_reg_4033 <= grp_fu_2602_p3;
        add_ln30_84_reg_4038 <= grp_fu_2608_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        add_ln30_18_reg_4053 <= grp_fu_2626_p3;
        add_ln30_19_reg_4058 <= grp_fu_2632_p3;
        add_ln30_28_reg_4063 <= grp_fu_2638_p3;
        add_ln30_29_reg_4068 <= grp_fu_2644_p3;
        add_ln30_38_reg_4073 <= grp_fu_2650_p3;
        add_ln30_39_reg_4078 <= grp_fu_2656_p3;
        add_ln30_48_reg_4083 <= grp_fu_2662_p3;
        add_ln30_49_reg_4088 <= grp_fu_2668_p3;
        add_ln30_58_reg_4093 <= grp_fu_2674_p3;
        add_ln30_59_reg_4098 <= grp_fu_2680_p3;
        add_ln30_68_reg_4103 <= grp_fu_2686_p3;
        add_ln30_69_reg_4108 <= grp_fu_2692_p3;
        add_ln30_78_reg_4113 <= grp_fu_2698_p3;
        add_ln30_79_reg_4118 <= grp_fu_2704_p3;
        add_ln30_85_reg_4123 <= grp_fu_2710_p3;
        add_ln30_86_reg_4128 <= grp_fu_2716_p3;
        add_ln30_87_reg_4133 <= grp_fu_2722_p3;
        add_ln30_88_reg_4138 <= grp_fu_2728_p3;
        add_ln30_89_reg_4143 <= grp_fu_2734_p3;
        add_ln30_8_reg_4043 <= grp_fu_2614_p3;
        add_ln30_9_reg_4048 <= grp_fu_2620_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln30_94_reg_4148 <= grp_fu_2768_p3;
        add_ln30_95_reg_4153 <= grp_fu_2774_p3;
        add_ln30_96_reg_4158 <= grp_fu_2780_p3;
        add_ln30_97_reg_4163 <= grp_fu_2786_p3;
        add_ln30_98_reg_4168 <= grp_fu_2792_p3;
        add_ln30_99_reg_4173 <= grp_fu_2798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln53_fu_1866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        add_ln56_reg_4516[7 : 1] <= add_ln56_fu_1902_p2[7 : 1];
        tmp_10_reg_4558 <= tmp_10_fu_2088_p12;
        tmp_11_reg_4563 <= tmp_11_fu_2104_p12;
        tmp_5_reg_4528 <= tmp_5_fu_1978_p12;
        tmp_6_reg_4533 <= tmp_6_fu_1998_p12;
        tmp_7_reg_4538 <= tmp_7_fu_2018_p12;
        tmp_8_reg_4543 <= tmp_8_fu_2036_p12;
        tmp_9_reg_4548 <= tmp_9_fu_2054_p12;
        tmp_s_reg_4553 <= tmp_s_fu_2071_p12;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        i_1_reg_4511 <= i_1_fu_1872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_2817 <= i_fu_1692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln14_reg_2813 <= icmp_ln14_fu_1686_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        k_reg_3363 <= k_fu_1806_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28))) begin
        reg_1614 <= AB_6_q1;
        reg_1618 <= AB_6_q0;
        reg_1622 <= AB_7_q1;
        reg_1626 <= AB_7_q0;
        reg_1630 <= AB_8_q1;
        reg_1634 <= AB_8_q0;
        reg_1638 <= AB_9_q1;
        reg_1642 <= AB_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_1646 <= AB_8_q1;
        reg_1650 <= AB_8_q0;
        reg_1654 <= AB_9_q1;
        reg_1658 <= AB_9_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_1662 <= AB_9_q1;
        reg_1666 <= AB_9_q0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_0_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_0_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_0_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_0_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_0_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_0_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_0_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_0_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_0_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_0_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_0_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_0_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_0_address1 = 64'd1;
    end else begin
        AB_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_0_ce0 = 1'b1;
    end else begin
        AB_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_0_ce1 = 1'b1;
    end else begin
        AB_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_0_d0 = add_ln30_9_reg_4048;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_0_d0 = add_ln30_7_reg_3933;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_0_d0 = add_ln30_5_reg_3818;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_0_d0 = add_ln30_3_reg_3713;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_0_d0 = add_ln30_1_reg_3703;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_0_d0 = 16'd0;
    end else begin
        AB_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_0_d1 = add_ln30_8_reg_4043;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_0_d1 = add_ln30_6_reg_3928;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_0_d1 = add_ln30_4_reg_3813;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_0_d1 = add_ln30_2_reg_3708;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_0_d1 = add_ln30_reg_3698;
    end else begin
        AB_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd0)))) begin
        AB_0_we0 = 1'b1;
    end else begin
        AB_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_0_we1 = 1'b1;
    end else begin
        AB_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_1_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_1_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_1_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_1_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_1_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_1_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_1_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_1_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_1_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_1_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_1_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_1_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_1_address1 = 64'd1;
    end else begin
        AB_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_1_ce0 = 1'b1;
    end else begin
        AB_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_1_ce1 = 1'b1;
    end else begin
        AB_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_1_d0 = add_ln30_19_reg_4058;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_1_d0 = add_ln30_17_reg_3943;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_1_d0 = add_ln30_15_reg_3828;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_1_d0 = add_ln30_13_reg_3733;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_1_d0 = add_ln30_11_reg_3723;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_1_d0 = 16'd0;
    end else begin
        AB_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_1_d1 = add_ln30_18_reg_4053;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_1_d1 = add_ln30_16_reg_3938;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_1_d1 = add_ln30_14_reg_3823;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_1_d1 = add_ln30_12_reg_3728;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_1_d1 = add_ln30_10_reg_3718;
    end else begin
        AB_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd1)))) begin
        AB_1_we0 = 1'b1;
    end else begin
        AB_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_1_we1 = 1'b1;
    end else begin
        AB_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_2_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_2_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_2_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_2_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_2_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_2_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_2_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_2_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_2_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_2_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_2_address1 = 64'd1;
    end else begin
        AB_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_2_ce0 = 1'b1;
    end else begin
        AB_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_2_ce1 = 1'b1;
    end else begin
        AB_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_2_d0 = add_ln30_29_reg_4068;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_2_d0 = add_ln30_27_reg_3953;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_2_d0 = add_ln30_25_reg_3838;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_2_d0 = add_ln30_23_reg_3753;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_2_d0 = add_ln30_21_reg_3743;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_2_d0 = 16'd0;
    end else begin
        AB_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_2_d1 = add_ln30_28_reg_4063;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_2_d1 = add_ln30_26_reg_3948;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_2_d1 = add_ln30_24_reg_3833;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_2_d1 = add_ln30_22_reg_3748;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_2_d1 = add_ln30_20_reg_3738;
    end else begin
        AB_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd2)))) begin
        AB_2_we0 = 1'b1;
    end else begin
        AB_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_2_we1 = 1'b1;
    end else begin
        AB_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_3_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_3_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_3_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_3_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_3_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_3_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_3_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_3_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_3_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_3_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_3_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_3_address1 = 64'd1;
    end else begin
        AB_3_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_3_ce0 = 1'b1;
    end else begin
        AB_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_3_ce1 = 1'b1;
    end else begin
        AB_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_3_d0 = add_ln30_39_reg_4078;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_3_d0 = add_ln30_37_reg_3963;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_3_d0 = add_ln30_35_reg_3848;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_3_d0 = add_ln30_33_reg_3773;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_3_d0 = add_ln30_31_reg_3763;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_3_d0 = 16'd0;
    end else begin
        AB_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_3_d1 = add_ln30_38_reg_4073;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_3_d1 = add_ln30_36_reg_3958;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_3_d1 = add_ln30_34_reg_3843;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_3_d1 = add_ln30_32_reg_3768;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_3_d1 = add_ln30_30_reg_3758;
    end else begin
        AB_3_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd3)))) begin
        AB_3_we0 = 1'b1;
    end else begin
        AB_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_3_we1 = 1'b1;
    end else begin
        AB_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_4_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_4_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_4_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_4_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_4_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_4_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_4_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_4_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_4_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_4_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_4_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_4_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_4_address1 = 64'd1;
    end else begin
        AB_4_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_4_ce0 = 1'b1;
    end else begin
        AB_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_4_ce1 = 1'b1;
    end else begin
        AB_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_4_d0 = add_ln30_49_reg_4088;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_4_d0 = add_ln30_47_reg_3973;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_4_d0 = add_ln30_45_reg_3858;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_4_d0 = add_ln30_43_reg_3793;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_4_d0 = add_ln30_41_reg_3783;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_4_d0 = 16'd0;
    end else begin
        AB_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_4_d1 = add_ln30_48_reg_4083;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_4_d1 = add_ln30_46_reg_3968;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_4_d1 = add_ln30_44_reg_3853;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_4_d1 = add_ln30_42_reg_3788;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_4_d1 = add_ln30_40_reg_3778;
    end else begin
        AB_4_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd4)))) begin
        AB_4_we0 = 1'b1;
    end else begin
        AB_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_4_we1 = 1'b1;
    end else begin
        AB_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_5_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_5_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_5_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_5_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_5_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_5_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_5_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_5_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_5_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_5_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_5_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_5_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_5_address1 = 64'd1;
    end else begin
        AB_5_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_5_ce0 = 1'b1;
    end else begin
        AB_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_5_ce1 = 1'b1;
    end else begin
        AB_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_5_d0 = add_ln30_59_reg_4098;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_5_d0 = add_ln30_57_reg_3983;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_5_d0 = add_ln30_55_reg_3873;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_5_d0 = add_ln30_53_reg_3863;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_5_d0 = add_ln30_51_reg_3803;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_5_d0 = 16'd0;
    end else begin
        AB_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_5_d1 = add_ln30_58_reg_4093;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_5_d1 = add_ln30_56_reg_3978;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_5_d1 = add_ln30_54_reg_3868;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_5_d1 = add_ln30_52_reg_3808;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_5_d1 = add_ln30_50_reg_3798;
    end else begin
        AB_5_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd5)))) begin
        AB_5_we0 = 1'b1;
    end else begin
        AB_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_5_we1 = 1'b1;
    end else begin
        AB_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_6_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_6_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_6_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_6_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_6_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_6_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_6_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_6_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_6_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_6_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_6_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_6_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_6_address1 = 64'd1;
    end else begin
        AB_6_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_6_ce0 = 1'b1;
    end else begin
        AB_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_6_ce1 = 1'b1;
    end else begin
        AB_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_6_d0 = add_ln30_69_reg_4108;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_6_d0 = add_ln30_67_reg_3993;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_6_d0 = add_ln30_65_reg_3903;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_6_d0 = add_ln30_63_reg_3893;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_6_d0 = add_ln30_61_reg_3883;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_6_d0 = 16'd0;
    end else begin
        AB_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_6_d1 = add_ln30_68_reg_4103;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_6_d1 = add_ln30_66_reg_3988;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_6_d1 = add_ln30_64_reg_3898;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_6_d1 = add_ln30_62_reg_3888;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_6_d1 = add_ln30_60_reg_3878;
    end else begin
        AB_6_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd6)))) begin
        AB_6_we0 = 1'b1;
    end else begin
        AB_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_6_we1 = 1'b1;
    end else begin
        AB_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_7_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_7_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_7_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_7_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_7_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_7_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_7_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_7_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_7_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_7_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_7_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_7_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_7_address1 = 64'd1;
    end else begin
        AB_7_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_7_ce0 = 1'b1;
    end else begin
        AB_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_7_ce1 = 1'b1;
    end else begin
        AB_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_7_d0 = add_ln30_79_reg_4118;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_7_d0 = add_ln30_77_reg_4013;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_7_d0 = add_ln30_75_reg_4003;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_7_d0 = add_ln30_73_reg_3923;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_7_d0 = add_ln30_71_reg_3913;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_7_d0 = 16'd0;
    end else begin
        AB_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_7_d1 = add_ln30_78_reg_4113;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_7_d1 = add_ln30_76_reg_4008;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_7_d1 = add_ln30_74_reg_3998;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_7_d1 = add_ln30_72_reg_3918;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_7_d1 = add_ln30_70_reg_3908;
    end else begin
        AB_7_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd7)))) begin
        AB_7_we0 = 1'b1;
    end else begin
        AB_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_7_we1 = 1'b1;
    end else begin
        AB_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_8_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_8_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_8_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_8_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_8_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_8_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_8_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_8_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_8_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_8_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_8_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_8_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_8_address1 = 64'd1;
    end else begin
        AB_8_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_8_ce0 = 1'b1;
    end else begin
        AB_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_8_ce1 = 1'b1;
    end else begin
        AB_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_8_d0 = add_ln30_89_reg_4143;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_8_d0 = add_ln30_87_reg_4133;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_8_d0 = add_ln30_85_reg_4123;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_8_d0 = add_ln30_83_reg_4033;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_8_d0 = add_ln30_81_reg_4023;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_8_d0 = 16'd0;
    end else begin
        AB_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_8_d1 = add_ln30_88_reg_4138;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_8_d1 = add_ln30_86_reg_4128;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_8_d1 = add_ln30_84_reg_4038;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_8_d1 = add_ln30_82_reg_4028;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_8_d1 = add_ln30_80_reg_4018;
    end else begin
        AB_8_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & (phi_ln23_reg_1469 == 4'd8)))) begin
        AB_8_we0 = 1'b1;
    end else begin
        AB_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_8_we1 = 1'b1;
    end else begin
        AB_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_9_address0 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_9_address0 = 64'd9;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_9_address0 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_9_address0 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_9_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_9_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_9_address0 = zext_ln23_fu_1774_p1;
    end else begin
        AB_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state36))) begin
        AB_9_address1 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_9_address1 = 64'd8;
    end else if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state34))) begin
        AB_9_address1 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state33))) begin
        AB_9_address1 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state27))) begin
        AB_9_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        AB_9_address1 = 64'd1;
    end else begin
        AB_9_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_9_ce0 = 1'b1;
    end else begin
        AB_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27)))) begin
        AB_9_ce1 = 1'b1;
    end else begin
        AB_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_9_d0 = add_ln30_99_reg_4173;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_9_d0 = add_ln30_97_reg_4163;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_9_d0 = add_ln30_95_reg_4153;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_9_d0 = grp_fu_2761_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_9_d0 = grp_fu_2747_p3;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        AB_9_d0 = 16'd0;
    end else begin
        AB_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        AB_9_d1 = add_ln30_98_reg_4168;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        AB_9_d1 = add_ln30_96_reg_4158;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        AB_9_d1 = add_ln30_94_reg_4148;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        AB_9_d1 = grp_fu_2754_p3;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        AB_9_d1 = grp_fu_2740_p3;
    end else begin
        AB_9_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35) | ((1'b1 == ap_CS_fsm_state25) & ((phi_ln23_reg_1469 == 4'd9) | ((phi_ln23_reg_1469 == 4'd10) | ((phi_ln23_reg_1469 == 4'd11) | ((phi_ln23_reg_1469 == 4'd12) | ((phi_ln23_reg_1469 == 4'd13) | ((phi_ln23_reg_1469 == 4'd14) | (phi_ln23_reg_1469 == 4'd15)))))))))) begin
        AB_9_we0 = 1'b1;
    end else begin
        AB_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state35))) begin
        AB_9_we1 = 1'b1;
    end else begin
        AB_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_0_blk_n = ARows_V_a_0_empty_n;
    end else begin
        ARows_V_a_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_0_read = 1'b1;
    end else begin
        ARows_V_a_0_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_1_blk_n = ARows_V_a_1_empty_n;
    end else begin
        ARows_V_a_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_1_read = 1'b1;
    end else begin
        ARows_V_a_1_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_2_blk_n = ARows_V_a_2_empty_n;
    end else begin
        ARows_V_a_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_2_read = 1'b1;
    end else begin
        ARows_V_a_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_3_blk_n = ARows_V_a_3_empty_n;
    end else begin
        ARows_V_a_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_3_read = 1'b1;
    end else begin
        ARows_V_a_3_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_4_blk_n = ARows_V_a_4_empty_n;
    end else begin
        ARows_V_a_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_4_read = 1'b1;
    end else begin
        ARows_V_a_4_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_5_blk_n = ARows_V_a_5_empty_n;
    end else begin
        ARows_V_a_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_5_read = 1'b1;
    end else begin
        ARows_V_a_5_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_6_blk_n = ARows_V_a_6_empty_n;
    end else begin
        ARows_V_a_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_6_read = 1'b1;
    end else begin
        ARows_V_a_6_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_7_blk_n = ARows_V_a_7_empty_n;
    end else begin
        ARows_V_a_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_7_read = 1'b1;
    end else begin
        ARows_V_a_7_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_8_blk_n = ARows_V_a_8_empty_n;
    end else begin
        ARows_V_a_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_8_read = 1'b1;
    end else begin
        ARows_V_a_8_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_9_blk_n = ARows_V_a_9_empty_n;
    end else begin
        ARows_V_a_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ARows_V_a_9_read = 1'b1;
    end else begin
        ARows_V_a_9_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_0_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_0_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_0_ce0 = 1'b1;
    end else begin
        A_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_0_we0 = 1'b1;
    end else begin
        A_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_1_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_1_ce0 = 1'b1;
    end else begin
        A_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_1_we0 = 1'b1;
    end else begin
        A_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_2_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_2_ce0 = 1'b1;
    end else begin
        A_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_2_we0 = 1'b1;
    end else begin
        A_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_3_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_3_ce0 = 1'b1;
    end else begin
        A_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_3_we0 = 1'b1;
    end else begin
        A_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_4_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_4_ce0 = 1'b1;
    end else begin
        A_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_4_we0 = 1'b1;
    end else begin
        A_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_5_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_5_ce0 = 1'b1;
    end else begin
        A_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_5_we0 = 1'b1;
    end else begin
        A_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_6_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_6_ce0 = 1'b1;
    end else begin
        A_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_6_we0 = 1'b1;
    end else begin
        A_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_7_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_7_ce0 = 1'b1;
    end else begin
        A_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_7_we0 = 1'b1;
    end else begin
        A_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_8_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_8_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_8_ce0 = 1'b1;
    end else begin
        A_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_8_we0 = 1'b1;
    end else begin
        A_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        A_9_address0 = zext_ln30_fu_1812_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_address0 = zext_ln18_fu_1748_p1;
    end else begin
        A_9_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        A_9_ce0 = 1'b1;
    end else begin
        A_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        A_9_we0 = 1'b1;
    end else begin
        A_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_0_blk_n = BCols_V_a_0_empty_n;
    end else begin
        BCols_V_a_0_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_0_read = 1'b1;
    end else begin
        BCols_V_a_0_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_1_blk_n = BCols_V_a_1_empty_n;
    end else begin
        BCols_V_a_1_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_1_read = 1'b1;
    end else begin
        BCols_V_a_1_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_2_blk_n = BCols_V_a_2_empty_n;
    end else begin
        BCols_V_a_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_2_read = 1'b1;
    end else begin
        BCols_V_a_2_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_3_blk_n = BCols_V_a_3_empty_n;
    end else begin
        BCols_V_a_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_3_read = 1'b1;
    end else begin
        BCols_V_a_3_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_4_blk_n = BCols_V_a_4_empty_n;
    end else begin
        BCols_V_a_4_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_4_read = 1'b1;
    end else begin
        BCols_V_a_4_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_5_blk_n = BCols_V_a_5_empty_n;
    end else begin
        BCols_V_a_5_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_5_read = 1'b1;
    end else begin
        BCols_V_a_5_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_6_blk_n = BCols_V_a_6_empty_n;
    end else begin
        BCols_V_a_6_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_6_read = 1'b1;
    end else begin
        BCols_V_a_6_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_7_blk_n = BCols_V_a_7_empty_n;
    end else begin
        BCols_V_a_7_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_7_read = 1'b1;
    end else begin
        BCols_V_a_7_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_8_blk_n = BCols_V_a_8_empty_n;
    end else begin
        BCols_V_a_8_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_8_read = 1'b1;
    end else begin
        BCols_V_a_8_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        BCols_V_a_9_blk_n = BCols_V_a_9_empty_n;
    end else begin
        BCols_V_a_9_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        BCols_V_a_9_read = 1'b1;
    end else begin
        BCols_V_a_9_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        abPartialSum_out_address0 = sext_ln56_6_fu_2185_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        abPartialSum_out_address0 = sext_ln56_4_fu_2165_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        abPartialSum_out_address0 = sext_ln56_2_fu_2145_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        abPartialSum_out_address0 = sext_ln56_fu_2125_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        abPartialSum_out_address0 = zext_ln56_2_fu_1908_p1;
    end else begin
        abPartialSum_out_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        abPartialSum_out_address1 = sext_ln56_7_fu_2195_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        abPartialSum_out_address1 = sext_ln56_5_fu_2175_p1;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        abPartialSum_out_address1 = sext_ln56_3_fu_2155_p1;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        abPartialSum_out_address1 = sext_ln56_1_fu_2135_p1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        abPartialSum_out_address1 = zext_ln56_3_fu_1919_p1;
    end else begin
        abPartialSum_out_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46))) begin
        abPartialSum_out_ce0 = 1'b1;
    end else begin
        abPartialSum_out_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46))) begin
        abPartialSum_out_ce1 = 1'b1;
    end else begin
        abPartialSum_out_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        abPartialSum_out_d0 = tmp_10_reg_4558;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        abPartialSum_out_d0 = tmp_9_reg_4548;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        abPartialSum_out_d0 = tmp_7_reg_4538;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        abPartialSum_out_d0 = tmp_5_reg_4528;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        abPartialSum_out_d0 = tmp_3_fu_1924_p12;
    end else begin
        abPartialSum_out_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        abPartialSum_out_d1 = tmp_11_reg_4563;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        abPartialSum_out_d1 = tmp_s_reg_4553;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        abPartialSum_out_d1 = tmp_8_reg_4543;
    end else if ((1'b1 == ap_CS_fsm_state43)) begin
        abPartialSum_out_d1 = tmp_6_reg_4533;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        abPartialSum_out_d1 = tmp_4_fu_1951_p12;
    end else begin
        abPartialSum_out_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46) | ((icmp_ln53_fu_1866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        abPartialSum_out_we0 = 1'b1;
    end else begin
        abPartialSum_out_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state46) | ((icmp_ln53_fu_1866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        abPartialSum_out_we1 = 1'b1;
    end else begin
        abPartialSum_out_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln14_fu_1686_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln14_reg_2813 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_1461_p4 = i_reg_2817;
    end else begin
        ap_phi_mux_i_0_phi_fu_1461_p4 = i_0_reg_1457;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_1670_ap_start = 1'b1;
    end else begin
        grp_fu_1670_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((icmp_ln13_fu_1680_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln14_fu_1686_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln14_fu_1686_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((icmp_ln23_1_fu_1794_p2 == 1'd1) & (icmp_ln23_fu_1788_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else if (((icmp_ln23_fu_1788_p2 == 1'd1) & (icmp_ln23_1_fu_1794_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            if (((icmp_ln25_fu_1800_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((io_acc_block_signal_op362 == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            if (((icmp_ln53_fu_1866_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln23_1_fu_1768_p2 = (phi_ln23_1_reg_1481 + 4'd1);

assign add_ln23_fu_1762_p2 = (phi_ln23_reg_1469 + 4'd1);

assign add_ln56_1_fu_2120_p2 = (add_ln56_reg_4516 + 8'd2);

assign add_ln56_2_fu_2130_p2 = (add_ln56_reg_4516 + 8'd3);

assign add_ln56_3_fu_2140_p2 = (add_ln56_reg_4516 + 8'd4);

assign add_ln56_4_fu_2150_p2 = (add_ln56_reg_4516 + 8'd5);

assign add_ln56_5_fu_2160_p2 = (add_ln56_reg_4516 + 8'd6);

assign add_ln56_6_fu_2170_p2 = (add_ln56_reg_4516 + 8'd7);

assign add_ln56_7_fu_2180_p2 = (add_ln56_reg_4516 + 8'd8);

assign add_ln56_8_fu_2190_p2 = (add_ln56_reg_4516 + 8'd9);

assign add_ln56_fu_1902_p2 = (zext_ln56_1_fu_1898_p1 + zext_ln56_fu_1886_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd45];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((io_acc_block_signal_op134 == 1'b0) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((io_acc_block_signal_op134 == 1'b0) & (icmp_ln14_reg_2813 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_state21_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_pp0_stage0_iter1 = ((io_acc_block_signal_op134 == 1'b0) & (icmp_ln14_reg_2813 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign grp_fu_1670_p1 = 16'd100;

assign i_1_fu_1872_p2 = (i3_0_reg_1503 + 4'd1);

assign i_fu_1692_p2 = (ap_phi_mux_i_0_phi_fu_1461_p4 + 10'd1);

assign icmp_ln13_fu_1680_p2 = ((trunc_ln9_fu_1676_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln14_fu_1686_p2 = ((ap_phi_mux_i_0_phi_fu_1461_p4 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln23_1_fu_1794_p2 = ((phi_ln23_reg_1469 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln23_fu_1788_p2 = ((phi_ln23_1_reg_1481 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln25_fu_1800_p2 = ((k_0_reg_1492 == 10'd1000) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1866_p2 = ((i3_0_reg_1503 == 4'd10) ? 1'b1 : 1'b0);

assign io_acc_block_signal_op134 = (ARows_V_a_9_empty_n & ARows_V_a_8_empty_n & ARows_V_a_7_empty_n & ARows_V_a_6_empty_n & ARows_V_a_5_empty_n & ARows_V_a_4_empty_n & ARows_V_a_3_empty_n & ARows_V_a_2_empty_n & ARows_V_a_1_empty_n & ARows_V_a_0_empty_n);

assign io_acc_block_signal_op362 = (BCols_V_a_9_empty_n & BCols_V_a_8_empty_n & BCols_V_a_7_empty_n & BCols_V_a_6_empty_n & BCols_V_a_5_empty_n & BCols_V_a_4_empty_n & BCols_V_a_3_empty_n & BCols_V_a_2_empty_n & BCols_V_a_1_empty_n & BCols_V_a_0_empty_n);

assign k_fu_1806_p2 = (k_0_reg_1492 + 10'd1);

assign or_ln56_fu_1913_p2 = (8'd1 | add_ln56_fu_1902_p2);

assign sext_ln56_1_fu_2135_p1 = $signed(add_ln56_2_fu_2130_p2);

assign sext_ln56_2_fu_2145_p1 = $signed(add_ln56_3_fu_2140_p2);

assign sext_ln56_3_fu_2155_p1 = $signed(add_ln56_4_fu_2150_p2);

assign sext_ln56_4_fu_2165_p1 = $signed(add_ln56_5_fu_2160_p2);

assign sext_ln56_5_fu_2175_p1 = $signed(add_ln56_6_fu_2170_p2);

assign sext_ln56_6_fu_2185_p1 = $signed(add_ln56_7_fu_2180_p2);

assign sext_ln56_7_fu_2195_p1 = $signed(add_ln56_8_fu_2190_p2);

assign sext_ln56_fu_2125_p1 = $signed(add_ln56_1_fu_2120_p2);

assign tmp_12_fu_1878_p3 = {{i3_0_reg_1503}, {3'd0}};

assign tmp_13_fu_1890_p3 = {{i3_0_reg_1503}, {1'd0}};

assign trunc_ln9_fu_1676_p1 = grp_fu_1670_p2[7:0];

assign zext_ln18_fu_1748_p1 = i_0_reg_1457;

assign zext_ln23_fu_1774_p1 = phi_ln23_1_reg_1481;

assign zext_ln30_fu_1812_p1 = k_0_reg_1492;

assign zext_ln56_1_fu_1898_p1 = tmp_13_fu_1890_p3;

assign zext_ln56_2_fu_1908_p1 = add_ln56_fu_1902_p2;

assign zext_ln56_3_fu_1919_p1 = or_ln56_fu_1913_p2;

assign zext_ln56_fu_1886_p1 = tmp_12_fu_1878_p3;

always @ (posedge ap_clk) begin
    add_ln56_reg_4516[0] <= 1'b0;
end

endmodule //block_mmul
