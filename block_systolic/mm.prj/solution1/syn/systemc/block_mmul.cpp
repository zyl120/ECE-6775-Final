// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "block_mmul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic block_mmul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic block_mmul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> block_mmul::ap_ST_fsm_state1 = "1";
const sc_lv<4> block_mmul::ap_ST_fsm_state2 = "10";
const sc_lv<4> block_mmul::ap_ST_fsm_state3 = "100";
const sc_lv<4> block_mmul::ap_ST_fsm_state4 = "1000";
const sc_lv<32> block_mmul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> block_mmul::ap_const_lv32_2 = "10";
const sc_lv<1> block_mmul::ap_const_lv1_1 = "1";
const sc_lv<1> block_mmul::ap_const_lv1_0 = "0";
const sc_lv<5> block_mmul::ap_const_lv5_0 = "00000";
const sc_lv<32> block_mmul::ap_const_lv32_3 = "11";
const sc_lv<4> block_mmul::ap_const_lv4_0 = "0000";
const sc_lv<32> block_mmul::ap_const_lv32_1 = "1";
const sc_lv<32> block_mmul::ap_const_lv32_4 = "100";
const sc_lv<4> block_mmul::ap_const_lv4_C = "1100";
const sc_lv<4> block_mmul::ap_const_lv4_3 = "11";
const sc_lv<5> block_mmul::ap_const_lv5_4 = "100";
const bool block_mmul::ap_const_boolean_1 = true;

block_mmul::block_mmul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_block_mmul_helper_fu_56 = new block_mmul_helper("grp_block_mmul_helper_fu_56");
    grp_block_mmul_helper_fu_56->ap_clk(ap_clk);
    grp_block_mmul_helper_fu_56->ap_rst(ap_rst);
    grp_block_mmul_helper_fu_56->ap_start(grp_block_mmul_helper_fu_56_ap_start);
    grp_block_mmul_helper_fu_56->ap_done(grp_block_mmul_helper_fu_56_ap_done);
    grp_block_mmul_helper_fu_56->ap_idle(grp_block_mmul_helper_fu_56_ap_idle);
    grp_block_mmul_helper_fu_56->ap_ready(grp_block_mmul_helper_fu_56_ap_ready);
    grp_block_mmul_helper_fu_56->A_address0(grp_block_mmul_helper_fu_56_A_address0);
    grp_block_mmul_helper_fu_56->A_ce0(grp_block_mmul_helper_fu_56_A_ce0);
    grp_block_mmul_helper_fu_56->A_q0(A_q0);
    grp_block_mmul_helper_fu_56->A_address1(grp_block_mmul_helper_fu_56_A_address1);
    grp_block_mmul_helper_fu_56->A_ce1(grp_block_mmul_helper_fu_56_A_ce1);
    grp_block_mmul_helper_fu_56->A_q1(A_q1);
    grp_block_mmul_helper_fu_56->B_address0(grp_block_mmul_helper_fu_56_B_address0);
    grp_block_mmul_helper_fu_56->B_ce0(grp_block_mmul_helper_fu_56_B_ce0);
    grp_block_mmul_helper_fu_56->B_q0(B_q0);
    grp_block_mmul_helper_fu_56->B_address1(grp_block_mmul_helper_fu_56_B_address1);
    grp_block_mmul_helper_fu_56->B_ce1(grp_block_mmul_helper_fu_56_B_ce1);
    grp_block_mmul_helper_fu_56->B_q1(B_q1);
    grp_block_mmul_helper_fu_56->out_r_address0(grp_block_mmul_helper_fu_56_out_r_address0);
    grp_block_mmul_helper_fu_56->out_r_ce0(grp_block_mmul_helper_fu_56_out_r_ce0);
    grp_block_mmul_helper_fu_56->out_r_we0(grp_block_mmul_helper_fu_56_out_r_we0);
    grp_block_mmul_helper_fu_56->out_r_d0(grp_block_mmul_helper_fu_56_out_r_d0);
    grp_block_mmul_helper_fu_56->out_r_q0(out_r_q0);
    grp_block_mmul_helper_fu_56->out_r_address1(grp_block_mmul_helper_fu_56_out_r_address1);
    grp_block_mmul_helper_fu_56->out_r_ce1(grp_block_mmul_helper_fu_56_out_r_ce1);
    grp_block_mmul_helper_fu_56->out_r_we1(grp_block_mmul_helper_fu_56_out_r_we1);
    grp_block_mmul_helper_fu_56->out_r_d1(grp_block_mmul_helper_fu_56_out_r_d1);
    grp_block_mmul_helper_fu_56->out_r_q1(out_r_q1);
    grp_block_mmul_helper_fu_56->ii(ii_0_reg_32);
    grp_block_mmul_helper_fu_56->jj(jj_0_reg_44);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_A_address0);
    sensitive << ( grp_block_mmul_helper_fu_56_A_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_address1);
    sensitive << ( grp_block_mmul_helper_fu_56_A_address1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_ce0);
    sensitive << ( grp_block_mmul_helper_fu_56_A_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_A_ce1);
    sensitive << ( grp_block_mmul_helper_fu_56_A_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_address0);
    sensitive << ( grp_block_mmul_helper_fu_56_B_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_address1);
    sensitive << ( grp_block_mmul_helper_fu_56_B_address1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_ce0);
    sensitive << ( grp_block_mmul_helper_fu_56_B_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_B_ce1);
    sensitive << ( grp_block_mmul_helper_fu_56_B_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_70_p3 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_70_p3 );

    SC_METHOD(thread_grp_block_mmul_helper_fu_56_ap_start);
    sensitive << ( grp_block_mmul_helper_fu_56_ap_start_reg );

    SC_METHOD(thread_icmp_ln30_fu_78_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( jj_0_reg_44 );

    SC_METHOD(thread_ii_fu_90_p2);
    sensitive << ( ii_0_reg_32 );

    SC_METHOD(thread_jj_fu_84_p2);
    sensitive << ( jj_0_reg_44 );

    SC_METHOD(thread_out_r_address0);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_address0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_address1);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_address1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_ce0);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_ce1);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_ce1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_d0);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_d0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_d1);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_d1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_we0);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_out_r_we1);
    sensitive << ( grp_block_mmul_helper_fu_56_out_r_we1 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_tmp_fu_70_p3);
    sensitive << ( ii_0_reg_32 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln30_fu_78_p2 );
    sensitive << ( grp_block_mmul_helper_fu_56_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_fu_70_p3 );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    ap_CS_fsm = "0001";
    grp_block_mmul_helper_fu_56_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "block_mmul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, A_address0, "(port)A_address0");
    sc_trace(mVcdFile, A_ce0, "(port)A_ce0");
    sc_trace(mVcdFile, A_q0, "(port)A_q0");
    sc_trace(mVcdFile, A_address1, "(port)A_address1");
    sc_trace(mVcdFile, A_ce1, "(port)A_ce1");
    sc_trace(mVcdFile, A_q1, "(port)A_q1");
    sc_trace(mVcdFile, B_address0, "(port)B_address0");
    sc_trace(mVcdFile, B_ce0, "(port)B_ce0");
    sc_trace(mVcdFile, B_q0, "(port)B_q0");
    sc_trace(mVcdFile, B_address1, "(port)B_address1");
    sc_trace(mVcdFile, B_ce1, "(port)B_ce1");
    sc_trace(mVcdFile, B_q1, "(port)B_q1");
    sc_trace(mVcdFile, out_r_address0, "(port)out_r_address0");
    sc_trace(mVcdFile, out_r_ce0, "(port)out_r_ce0");
    sc_trace(mVcdFile, out_r_we0, "(port)out_r_we0");
    sc_trace(mVcdFile, out_r_d0, "(port)out_r_d0");
    sc_trace(mVcdFile, out_r_q0, "(port)out_r_q0");
    sc_trace(mVcdFile, out_r_address1, "(port)out_r_address1");
    sc_trace(mVcdFile, out_r_ce1, "(port)out_r_ce1");
    sc_trace(mVcdFile, out_r_we1, "(port)out_r_we1");
    sc_trace(mVcdFile, out_r_d1, "(port)out_r_d1");
    sc_trace(mVcdFile, out_r_q1, "(port)out_r_q1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, jj_fu_84_p2, "jj_fu_84_p2");
    sc_trace(mVcdFile, jj_reg_102, "jj_reg_102");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln30_fu_78_p2, "icmp_ln30_fu_78_p2");
    sc_trace(mVcdFile, ii_fu_90_p2, "ii_fu_90_p2");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_ap_start, "grp_block_mmul_helper_fu_56_ap_start");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_ap_done, "grp_block_mmul_helper_fu_56_ap_done");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_ap_idle, "grp_block_mmul_helper_fu_56_ap_idle");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_ap_ready, "grp_block_mmul_helper_fu_56_ap_ready");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_A_address0, "grp_block_mmul_helper_fu_56_A_address0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_A_ce0, "grp_block_mmul_helper_fu_56_A_ce0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_A_address1, "grp_block_mmul_helper_fu_56_A_address1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_A_ce1, "grp_block_mmul_helper_fu_56_A_ce1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_B_address0, "grp_block_mmul_helper_fu_56_B_address0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_B_ce0, "grp_block_mmul_helper_fu_56_B_ce0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_B_address1, "grp_block_mmul_helper_fu_56_B_address1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_B_ce1, "grp_block_mmul_helper_fu_56_B_ce1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_address0, "grp_block_mmul_helper_fu_56_out_r_address0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_ce0, "grp_block_mmul_helper_fu_56_out_r_ce0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_we0, "grp_block_mmul_helper_fu_56_out_r_we0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_d0, "grp_block_mmul_helper_fu_56_out_r_d0");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_address1, "grp_block_mmul_helper_fu_56_out_r_address1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_ce1, "grp_block_mmul_helper_fu_56_out_r_ce1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_we1, "grp_block_mmul_helper_fu_56_out_r_we1");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_out_r_d1, "grp_block_mmul_helper_fu_56_out_r_d1");
    sc_trace(mVcdFile, ii_0_reg_32, "ii_0_reg_32");
    sc_trace(mVcdFile, jj_0_reg_44, "jj_0_reg_44");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, tmp_fu_70_p3, "tmp_fu_70_p3");
    sc_trace(mVcdFile, grp_block_mmul_helper_fu_56_ap_start_reg, "grp_block_mmul_helper_fu_56_ap_start_reg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
    mHdltvinHandle.open("block_mmul.hdltvin.dat");
    mHdltvoutHandle.open("block_mmul.hdltvout.dat");
}

block_mmul::~block_mmul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete grp_block_mmul_helper_fu_56;
}

void block_mmul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_block_mmul_helper_fu_56_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
             esl_seteq<1,1,1>(icmp_ln30_fu_78_p2.read(), ap_const_lv1_1))) {
            grp_block_mmul_helper_fu_56_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_block_mmul_helper_fu_56_ap_ready.read())) {
            grp_block_mmul_helper_fu_56_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln30_fu_78_p2.read(), ap_const_lv1_0))) {
        ii_0_reg_32 = ii_fu_90_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ii_0_reg_32 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_70_p3.read()))) {
        jj_0_reg_44 = ap_const_lv4_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_block_mmul_helper_fu_56_ap_done.read(), ap_const_logic_1))) {
        jj_0_reg_44 = jj_reg_102.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_78_p2.read(), ap_const_lv1_1))) {
        jj_reg_102 = jj_fu_84_p2.read();
    }
}

void block_mmul::thread_A_address0() {
    A_address0 = grp_block_mmul_helper_fu_56_A_address0.read();
}

void block_mmul::thread_A_address1() {
    A_address1 = grp_block_mmul_helper_fu_56_A_address1.read();
}

void block_mmul::thread_A_ce0() {
    A_ce0 = grp_block_mmul_helper_fu_56_A_ce0.read();
}

void block_mmul::thread_A_ce1() {
    A_ce1 = grp_block_mmul_helper_fu_56_A_ce1.read();
}

void block_mmul::thread_B_address0() {
    B_address0 = grp_block_mmul_helper_fu_56_B_address0.read();
}

void block_mmul::thread_B_address1() {
    B_address1 = grp_block_mmul_helper_fu_56_B_address1.read();
}

void block_mmul::thread_B_ce0() {
    B_ce0 = grp_block_mmul_helper_fu_56_B_ce0.read();
}

void block_mmul::thread_B_ce1() {
    B_ce1 = grp_block_mmul_helper_fu_56_B_ce1.read();
}

void block_mmul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void block_mmul::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void block_mmul::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void block_mmul::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void block_mmul::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_70_p3.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void block_mmul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void block_mmul::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_70_p3.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void block_mmul::thread_grp_block_mmul_helper_fu_56_ap_start() {
    grp_block_mmul_helper_fu_56_ap_start = grp_block_mmul_helper_fu_56_ap_start_reg.read();
}

void block_mmul::thread_icmp_ln30_fu_78_p2() {
    icmp_ln30_fu_78_p2 = (!jj_0_reg_44.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): (sc_biguint<4>(jj_0_reg_44.read()) < sc_biguint<4>(ap_const_lv4_C));
}

void block_mmul::thread_ii_fu_90_p2() {
    ii_fu_90_p2 = (!ii_0_reg_32.read().is_01() || !ap_const_lv5_4.is_01())? sc_lv<5>(): (sc_biguint<5>(ii_0_reg_32.read()) + sc_biguint<5>(ap_const_lv5_4));
}

void block_mmul::thread_jj_fu_84_p2() {
    jj_fu_84_p2 = (!jj_0_reg_44.read().is_01() || !ap_const_lv4_3.is_01())? sc_lv<4>(): (sc_biguint<4>(jj_0_reg_44.read()) + sc_biguint<4>(ap_const_lv4_3));
}

void block_mmul::thread_out_r_address0() {
    out_r_address0 = grp_block_mmul_helper_fu_56_out_r_address0.read();
}

void block_mmul::thread_out_r_address1() {
    out_r_address1 = grp_block_mmul_helper_fu_56_out_r_address1.read();
}

void block_mmul::thread_out_r_ce0() {
    out_r_ce0 = grp_block_mmul_helper_fu_56_out_r_ce0.read();
}

void block_mmul::thread_out_r_ce1() {
    out_r_ce1 = grp_block_mmul_helper_fu_56_out_r_ce1.read();
}

void block_mmul::thread_out_r_d0() {
    out_r_d0 = grp_block_mmul_helper_fu_56_out_r_d0.read();
}

void block_mmul::thread_out_r_d1() {
    out_r_d1 = grp_block_mmul_helper_fu_56_out_r_d1.read();
}

void block_mmul::thread_out_r_we0() {
    out_r_we0 = grp_block_mmul_helper_fu_56_out_r_we0.read();
}

void block_mmul::thread_out_r_we1() {
    out_r_we1 = grp_block_mmul_helper_fu_56_out_r_we1.read();
}

void block_mmul::thread_tmp_fu_70_p3() {
    tmp_fu_70_p3 = ii_0_reg_32.read().range(4, 4);
}

void block_mmul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_fu_70_p3.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln30_fu_78_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_block_mmul_helper_fu_56_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

void block_mmul::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst\" :  \"" << ap_rst.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"ap_start\" :  \"" << ap_start.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"ap_done\" :  \"" << ap_done.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_idle\" :  \"" << ap_idle.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"ap_ready\" :  \"" << ap_ready.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address0\" :  \"" << A_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce0\" :  \"" << A_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q0\" :  \"" << A_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_address1\" :  \"" << A_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"A_ce1\" :  \"" << A_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"A_q1\" :  \"" << A_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address0\" :  \"" << B_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce0\" :  \"" << B_ce0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q0\" :  \"" << B_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_address1\" :  \"" << B_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"B_ce1\" :  \"" << B_ce1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"B_q1\" :  \"" << B_q1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address0\" :  \"" << out_r_address0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce0\" :  \"" << out_r_ce0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we0\" :  \"" << out_r_we0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d0\" :  \"" << out_r_d0.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_q0\" :  \"" << out_r_q0.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_address1\" :  \"" << out_r_address1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_ce1\" :  \"" << out_r_ce1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_we1\" :  \"" << out_r_we1.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_d1\" :  \"" << out_r_d1.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_q1\" :  \"" << out_r_q1.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

